concrete MidLevelOntologyEng of MidLevelOntology = MergeEng, ElementsEng ** open DictLangEng, DictEng, ParadigmsEng,ExtensionEng in {

lin
  -- individual instances :
  Accountant = MassNP (UseN accountant_N) ;
  Acre = MassNP (UseN acre_N) ;
  Anthropology = MassNP (UseN anthropology_N) ;
  Architecture = MassNP (UseN architecture_N) ;
  AttorneyGeneral = MassNP (ApposCN (UseN attorney_N) (MassNP (UseN general_N))) ;
  Banker = MassNP (UseN banker_N) ;
  Biology = MassNP (UseN biology_N) ;
  Blind = MassNP (UseN blind_N) ;
  BusinessPerson = MassNP (ApposCN (UseN business_N) (MassNP (UseN person_N))) ;
  Cancer = MassNP (UseN cancer_N) ;
  Carpenter = MassNP (UseN carpenter_N) ;
  CenturyDuration = MassNP (ApposCN (UseN century_N) (MassNP (UseN duration_N))) ;
  ChemicalEquilibrium = MassNP (AdjCN (PositA chemical_A) (UseN equilibrium_N)) ;
  Chemistry = MassNP (UseN chemistry_N) ;
  ClericalSecretary = MassNP (AdjCN (PositA clerical_A) (UseN secretary_N)) ;
  Coach = MassNP (UseN coach_N) ;
  CollegeFreshman = MassNP (ApposCN (UseN college_N) (MassNP (UseN freshman_N))) ;
  CollegeJunior = MassNP (ApposCN (UseN college_N) (MassNP (UseN junior_N))) ;
  CollegeSenior = MassNP (ApposCN (UseN college_N) (MassNP (UseN senior_N))) ;
  CollegeSophomore = MassNP (ApposCN (UseN college_N) (MassNP (UseN sophomore_N))) ;
  Comedian = MassNP (UseN comedian_N) ;
  CommonEra = MassNP (AdjCN (PositA common_A) (UseN era_N)) ;
  ContainerEmpty = MassNP (ApposCN (UseN container_N) (MassNP (UseN empty_N))) ;
  Coroner = MassNP (UseN coroner_N) ;
  DecadeDuration = MassNP (ApposCN (UseN decade_N) (MassNP (UseN duration_N))) ;
  DemocraticParty = MassNP (AdjCN (PositA democratic_A) (UseN party_N)) ;
  Dentist = MassNP (UseN dentist_N) ;
  Diarrhea = MassNP (UseN diarrhea_N) ;
  Diplomat = MassNP (UseN diplomat_N) ;
  Dissident = MassNP (UseN dissident_N) ;
  Economics = DetCN (DetQuant IndefArt NumPl) (UseN economics_N) ;
  Electronics = DetCN (DetQuant IndefArt NumPl) (UseN electronics_N) ;
  Engineering = DetCN (DetQuant IndefArt NumPl) (UseN2 (VerbToNounV2 engineer_V2)) ;
  FarmHand = MassNP (ApposCN (UseN farm_N) (MassNP (UseN hand_N))) ;
  Fever = MassNP (UseN fever_N) ;
  FieldOfLaw = AdvNP (MassNP (UseN field_N)) (PrepNP part_Prep (MassNP (UseN law_N))) ;
  Fist = MassNP (UseN fist_N) ;
  Flat = MassNP (UseN flat_N) ;
  Foul = MassNP (UseN foul_N) ;
  Functioning = DetCN (DetQuant IndefArt NumSg) (UseN (VerbToNoun function_V)) ;
  GovernmentPerson = MassNP (ApposCN (UseN government_N) (MassNP (UseN person_N))) ;
  Governor = MassNP (UseN governor_N) ;
  Green = MassNP (UseN green_N) ;
  Handstand = MassNP (UseN handstand_N) ;
  Happiness = MassNP (UseN happiness_N) ;
  History = MassNP (UseN history_N) ;
  HumanSlave = MassNP (AdjCN (PositA human_A) (UseN slave_N)) ;
  Inside = MassNP (UseN inside_N) ;
  InteriorDesign = MassNP (AdjCN (PositA interior_A) (UseN design_N)) ;
  Kneeling = DetCN (DetQuant IndefArt NumSg) (UseN (VerbToNoun kneel_V)) ;
  Knight = MassNP (UseN knight_N) ;
  LegislativeBill = MassNP (AdjCN (PositA legislative_A) (UseN bill_N)) ;
  LevelShape = MassNP (AdjCN (PositA level_A) (UseN shape_N)) ;
  LieutenantGovernor = MassNP (ApposCN (UseN lieutenant_N) (MassNP (UseN governor_N))) ;
  LineFormation = MassNP (ApposCN (UseN line_N) (MassNP (UseN formation_N))) ;
  Linguistics = DetCN (DetQuant IndefArt NumPl) (UseN linguistics_N) ;
  LiquorShot = PPartNP (MassNP (UseN liquor_N)) overshoot_V2 ;
  Literature = MassNP (UseN literature_N) ;
  Malfunctioning = DetCN (DetQuant IndefArt NumSg) (UseN (VerbToNoun malfunction_V)) ;
  Mathematics = DetCN (DetQuant IndefArt NumPl) (UseN mathematics_N) ;
  Mayor = MassNP (UseN mayor_N) ;
  MedicalScience = MassNP (AdjCN (PositA medical_A) (UseN science_N)) ;
  MetricTon = MassNP (AdjCN (PositA metric_A) (UseN ton_N)) ;
  Militant = MassNP (UseN militant_N) ;
  MilitaryPerson = MassNP (AdjCN (PositA military_A) (UseN person_N)) ;
  MilitaryScience = MassNP (AdjCN (PositA military_A) (UseN science_N)) ;
  MillenniumDuration = MassNP (ApposCN (UseN millennium_N) (MassNP (UseN duration_N))) ;
  Musician = MassNP (UseN musician_N) ;
  NaziParty = MassNP (AdjCN (PositA nazi_A) (UseN party_N)) ;
  NewsReporter = MassNP (ApposCN (UseN news_N) (MassNP (UseN reporter_N))) ;
  Outside = MassNP (UseN outside_N) ;
  Page = MassNP (UseN page_N) ;
  Philosophy = MassNP (UseN philosophy_N) ;
  Physics = DetCN (DetQuant IndefArt NumPl) (UseN physic_N) ;
  Physiology = MassNP (UseN physiology_N) ;
  Pink = MassNP (UseN pink_N) ;
  Plumber = MassNP (UseN plumber_N) ;
  PoliticalScience = MassNP (AdjCN (PositA political_A) (UseN science_N)) ;
  Pope = MassNP (UseN pope_N) ;
  Potter = MassNP (UseN potter_N) ;
  PresidentOfTheUnitedStates = AdvNP (MassNP (UseN president_N)) (PrepNP part_Prep (DetCN (DetQuant DefArt NumPl) (AdjCN (PositA united_A) (UseN state_N)))) ;
  PrivateDetective = MassNP (AdjCN (PositA private_A) (UseN detective_N)) ;
  Psychology = MassNP (UseN psychology_N) ;
  Purple = MassNP (UseN purple_N) ;
  RepublicanParty = MassNP (AdjCN (PositA republican_A) (UseN party_N)) ;
  RoundShape = MassNP (AdjCN (PositA round_A) (UseN shape_N)) ;
  SecretaryOfTheInterior = AdvNP (MassNP (UseN secretary_N)) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (UseN interior_N))) ;
  SecretaryOfTheTreasury = AdvNP (MassNP (UseN secretary_N)) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (UseN treasury_N))) ;
  Splitting = DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 split_V2)) ;
  SportsOut = AdvNP (DetCN (DetQuant IndefArt NumPl) (UseN sport_N)) out_Adv ;
  SquareMile = MassNP (AdjCN (PositA square_A) (UseN mile_N)) ;
  SquareYard = MassNP (AdjCN (PositA square_A) (UseN yard_N)) ;
  StoreOwner = MassNP (ApposCN (UseN store_N) (MassNP (UseN owner_N))) ;
  Student = MassNP (UseN student_N) ;
  Surprise = MassNP (UseN surprise_N) ;
  SymmetricShape = MassNP (AdjCN (PositA symmetric_A) (UseN shape_N)) ;
  Teacher = MassNP (UseN teacher_N) ;
  Theology = MassNP (UseN theology_N) ;
  TieScore = MassNP (ApposCN (UseN tie_N) (MassNP (UseN score_N))) ;
  TonMass = MassNP (ApposCN (UseN ton_N) (MassNP (UseN mass_N))) ;
  Tourist = MassNP (UseN tourist_N) ;
  Tuberculosis = MassNP (UseN tuberculosis_N) ;
  Unhappiness = MassNP (UseN unhappiness_N) ;
  UnitedStatesCongress = DetCN (DetQuant IndefArt NumPl) (AdjCN (PositA united_A) (ApposCN (UseN state_N) (MassNP (UseN congress_N)))) ;
  UnitedStatesDepartmentOfInterior = AdvNP (DetCN (DetQuant IndefArt NumPl) (AdjCN (PositA united_A) (ApposCN (UseN state_N) (MassNP (UseN department_N))))) (PrepNP part_Prep (MassNP (UseN interior_N))) ;
  UnitedStatesDepartmentOfState = AdvNP (DetCN (DetQuant IndefArt NumPl) (AdjCN (PositA united_A) (ApposCN (UseN state_N) (MassNP (UseN department_N))))) (PrepNP part_Prep (MassNP (UseN state_N))) ;
  Veteran = MassNP (UseN veteran_N) ;
  YardLength = MassNP (ApposCN (UseN yard_N) (MassNP (UseN length_N))) ;
  Drunk = MassNP (UseN drunk_N) ;
  InternationalLaw = MassNP (AdjCN (PositA international_A) (UseN law_N)) ;
  MarriageContract = MassNP (ApposCN (UseN marriage_N) (MassNP (UseN contract_N))) ;
  Treaty = MassNP (UseN treaty_N) ;
  Satisfaction = MassNP (UseN satisfaction_N) ;
  Tranquility = MassNP (UseN tranquility_N) ;
  Excitement = MassNP (UseN excitement_N) ;
  Anxiety = MassNP (UseN anxiety_N) ;
  Anger = MassNP (UseN anger_N) ;
  Pain = MassNP (UseN pain_N) ;
  Headache = MassNP (UseN headache_N) ;
  Puberty = MassNP (UseN puberty_N) ;
  Squatting = DetCN (DetQuant IndefArt NumSg) (UseN (VerbToNoun squat_V)) ;
  Housewife = MassNP (UseN housewife_N) ;
  Deputy = MassNP (UseN deputy_N) ;
  AttorneyGeneral = MassNP (ApposCN (UseN attorney_N) (MassNP (UseN general_N))) ;
  Professor = MassNP (UseN professor_N) ;
  ArtCritic = MassNP (ApposCN (UseN art_N) (MassNP (UseN critic_N))) ;
  Dissident = MassNP (UseN dissident_N) ;


  -- subclasses 
  Aborting = UseN2 (VerbToNounV2 abort_V2) ;
  AcademicDegree = AdjCN (PositA academic_A) (UseN degree_N) ;
  Accelerating = UseN2 (VerbToNounV2 accelerate_V2) ;
  Accrediting = UseN2 (VerbToNounV2 accredit_V2) ;
  AchievingControl = AdjCN (PositA (VerbToGerundA achieve_V2)) (UseN control_N) ;
  AcuteAngle = AdjCN (PositA acute_A) (UseN angle_N) ;
  Address = UseN address_N ;
  Aerating = UseN2 (VerbToNounV2 aerate_V2) ;
  Afternoon = UseN afternoon_N ;
  Agency = UseN agency_N ;
  AirForce = ApposCN (UseN air_N) (MassNP (UseN force_N)) ;
  AirTransportation = ApposCN (UseN air_N) (MassNP (UseN transportation_N)) ;
  Aircraft = UseN aircraft_N ;
  Alcohol = UseN alcohol_N ;
  AlcoholicBeverage = AdjCN (PositA alcoholic_A) (UseN beverage_N) ;
  Ambush = UseN ambush_N ;
  Anaconda = UseN anaconda_N ;
  Anchor = UseN anchor_N ;
  AnimalController = ApposCN (UseN animal_N) (MassNP (UseN controller_N)) ;
  AnimalPoweredDevice = ApposCN (UseN animal_N) (MassNP (AdjCN (PositA powered_A) (UseN device_N))) ;
  AnimalResidence = ApposCN (UseN animal_N) (MassNP (UseN residence_N)) ;
  AnimalShell = ApposCN (UseN animal_N) (MassNP (UseN shell_N)) ;
  AnimalTeam = ApposCN (UseN animal_N) (MassNP (UseN team_N)) ;
  Ankle = UseN ankle_N ;
  Announcement = UseN announcement_N ;
  Answering = UseN2 (VerbToNounV2 answer_V2) ;
  AntInsect = ApposCN (UseN ant_N) (MassNP (UseN insect_N)) ;
  Antelope = UseN antelope_N ;
  Antenna = UseN antenna_N ;
  Antibiotic = UseN antibiotic_N ;
  Antibody = UseN antibody_N ;
  ApartmentBuilding = ApposCN (UseN apartment_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 build_V2))) ;
  ApartmentUnit = ApposCN (UseN apartment_N) (MassNP (UseN unit_N)) ;
  Application = UseN application_N ;
  Appointing = UseN2 (VerbToNounV2 appoint_V2) ;
  Apron = UseN apron_N ;
  Arguing = UseN2 (VerbToNounV2 argue_V2) ;
  Arm = UseN arm_N ;
  Army = UseN army_N ;
  Arriving = UseN (VerbToNoun arrive_V) ;
  ArrowFigure = ApposCN (UseN arrow_N) (MassNP (UseN figure_N)) ;
  ArrowIcon = ApposCN (UseN arrow_N) (MassNP (UseN icon_N)) ;
  ArrowProjectile = ApposCN (UseN arrow_N) (MassNP (UseN projectile_N)) ;
  Arson = UseN arson_N ;
  ArtPainting = ApposCN (UseN art_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 paint_V2))) ;
  ArtSchool = ApposCN (UseN art_N) (MassNP (UseN school_N)) ;
  ArtStudio = ApposCN (UseN art_N) (MassNP (UseN studio_N)) ;
  Artery = UseN artery_N ;
  ArtilleryGun = ApposCN (UseN artillery_N) (MassNP (UseN gun_N)) ;
  AtmosphericRegion = AdjCN (PositA atmospheric_A) (UseN region_N) ;
  AtomicGroup = AdjCN (PositA atomic_A) (UseN group_N) ;
  Atrophy = UseN atrophy_N ;
  Auditorium = UseN auditorium_N ;
  AuditoriumSeat = ApposCN (UseN auditorium_N) (MassNP (UseN seat_N)) ;
  AutomaticGun = AdjCN (PositA automatic_A) (UseN gun_N) ;
  Automobile = UseN automobile_N ;
  Axle = UseN axle_N ;
  BacterialDisease = AdjCN (PositA bacterial_A) (UseN disease_N) ;
  Bag = UseN bag_N ;
  Baking = UseN2 (VerbToNounV2 bake_V2) ;
  Ball = UseN ball_N ;
  BallisticMissile = AdjCN (PositA ballistic_A) (UseN missile_N) ;
  Ballot = UseN ballot_N ;
  Bandage = UseN bandage_N ;
  Baptizing = UseN2 (VerbToNounV2 baptize_V2) ;
  BargainSale = ApposCN (UseN bargain_N) (MassNP (UseN sale_N)) ;
  Barking = UseN2 (VerbToNounV2 bark_V2) ;
  Barn = UseN barn_N ;
  Basement = UseN basement_N ;
  Bathing = UseN bathing_N ;
  BathingDevice = AdjCN (PositA (VerbToGerundA bath_V2)) (UseN device_N) ;
  Bathroom = UseN bathroom_N ;
  Baton = UseN baton_N ;
  BecomingDrunk = AdjCN (PositA becoming_A) (UseN drunk_N) ;
  Bed = UseN bed_N ;
  Bedroom = UseN bedroom_N ;
  Bee = UseN bee_N ;
  Beef = UseN beef_N ;
  Beer = UseN beer_N ;
  BeginningOperations = AdjCN (PositA (VerbToGerundA begin_V2)) (UseN operation_N) ;
  Bell = UseN bell_N ;
  Belt = UseN belt_N ;
  Bequeathing = UseN2 (VerbToNounV2 bequeath_V2) ;
  Biography = UseN biography_N ;
  BiologicalConception = AdjCN (PositA biological_A) (UseN conception_N) ;
  BiologicalSpecies = AdjCN (PositA biological_A) (UseN species_N) ;
  BirdEgg = ApposCN (UseN bird_N) (MassNP (UseN egg_N)) ;
  Biting = UseN2 (VerbToNounV2 backbite_V2) ;
  Blanket = UseN blanket_N ;
  Bleeding = UseN2 (VerbToNounV2 bleed_V2) ;
  Blockade = UseN blockade_N ;
  BloodCell = ApposCN (UseN blood_N) (MassNP (UseN cell_N)) ;
  BloodVessel = ApposCN (UseN blood_N) (MassNP (UseN vessel_N)) ;
  Blueprint = UseN blueprint_N ;
  Blushing = UseN (VerbToNoun blush_V) ;
  BoardOrBlock = ConjCN or_Conj (BaseCN (UseN board_N) (UseN block_N)) ;
  Boarding = UseN boarding_N ;
  BoatDeck = ApposCN (UseN boat_N) (MassNP (UseN deck_N)) ;
  BodyJoint = ApposCN (UseN body_N) (MassNP (UseN joint_N)) ;
  Bomb = UseN bomb_N ;
  Bomber = UseN bomber_N ;
  Bombing = UseN2 (VerbToNounV2 bomb_V2) ;
  Bottle = UseN bottle_N ;
  Bowing = UseN bowing_N ;
  Box = UseN box_N ;
  Boy = UseN boy_N ;
  Brain = UseN brain_N ;
  Brandy = UseN brandy_N ;
  Brass = UseN brass_N ;
  BreadOrBiscuit = ConjCN or_Conj (BaseCN (UseN bread_N) (UseN biscuit_N)) ;
  Breast = UseN breast_N ;
  Brick = UseN brick_N ;
  BrigadierGeneral = ApposCN (UseN brigadier_N) (MassNP (UseN general_N)) ;
  BroadcastNetwork = ApposCN (UseN broadcast_N) (MassNP (UseN network_N)) ;
  BroadcastProgram = ApposCN (UseN broadcast_N) (MassNP (UseN program_N)) ;
  Broadcasting = UseN broadcasting_N ;
  BronchialDuct = AdjCN (PositA bronchial_A) (UseN duct_N) ;
  Brood = UseN brood_N ;
  Broom = UseN broom_N ;
  BrushOrComb = ConjCN or_Conj (BaseCN (UseN brush_N) (UseN comb_N)) ;
  Bubble = UseN bubble_N ;
  Buffalo = UseN buffalo_N ;
  Bugle = UseN bugle_N ;
  BuildingLevel = AdjCN (PositA (VerbToGerundA build_V2)) (UseN level_N) ;
  Bull = UseN bull_N ;
  Bullet = UseN bullet_N ;
  Burrow = UseN burrow_N ;
  Burying = UseN2 (VerbToNounV2 bury_V2) ;
  Bus = UseN bus_N ;
  BusStop = ApposCN (UseN bus_N) (MassNP (UseN stop_N)) ;
  BusinessCompetition = ApposCN (UseN business_N) (MassNP (UseN competition_N)) ;
  Butter = UseN butter_N ;
  Button = UseN button_N ;
  Cafeteria = UseN cafeteria_N ;
  Calf = UseN calf_N ;
  Camera = UseN camera_N ;
  Camp = UseN camp_N ;
  Candle = UseN candle_N ;
  Capillary = UseN capillary_N ;
  CaptainOfficer = ApposCN (UseN captain_N) (MassNP (UseN officer_N)) ;
  Capturing = UseN2 (VerbToNounV2 capture_V2) ;
  CarBombing = ApposCN (UseN car_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 bomb_V2))) ;
  CareOrganization = ApposCN (UseN care_N) (MassNP (UseN organization_N)) ;
  Carpentry = UseN carpentry_N ;
  Catching = UseN2 (VerbToNounV2 catch_V2) ;
  CausingHappiness = AdjCN (PositA (VerbToGerundA cause_V2)) (UseN happiness_N) ;
  CausingPain = AdjCN (PositA (VerbToGerundA cause_V2)) (UseN pain_N) ;
  CausingUnhappiness = AdjCN (PositA (VerbToGerundA cause_V2)) (UseN unhappiness_N) ;
  CavalryUnit = ApposCN (UseN cavalry_N) (MassNP (UseN unit_N)) ;
  CeasingOperations = AdjCN (PositA (VerbToGerundA cease_V2)) (UseN operation_N) ;
  Ceiling = UseN ceiling_N ;
  CellNucleus = ApposCN (UseN cell_N) (MassNP (UseN nucleus_N)) ;
  Cellulose = UseN cellulose_N ;
  Cemetery = UseN cemetery_N ;
  CentrifugalMotion = AdjCN (PositA centrifugal_A) (UseN motion_N) ;
  CentripetalMotion = AdjCN (PositA centripetal_A) (UseN motion_N) ;
  CerealGrain = ApposCN (UseN cereal_N) (MassNP (UseN grain_N)) ;
  Chair = UseN chair_N ;
  ChangeOfControl = AdvCN (UseN change_N) (PrepNP part_Prep (MassNP (UseN control_N))) ;
  ChangingClothing = AdjCN (PositA (VerbToGerundA change_V2)) (UseN clothing_N) ;
  Chapter = UseN chapter_N ;
  Chart = UseN chart_N ;
  Checkpoint = UseN checkpoint_N ;
  ChemicalAcid = AdjCN (PositA chemical_A) (UseN acid_N) ;
  ChemicalAttack = AdjCN (PositA chemical_A) (UseN attack_N) ;
  ChemicalBase = AdjCN (PositA chemical_A) (UseN base_N) ;
  ChemicalReduction = AdjCN (PositA chemical_A) (UseN reduction_N) ;
  ChemicalSalt = AdjCN (PositA chemical_A) (UseN salt_N) ;
  ChestOrCabinet = ConjCN or_Conj (BaseCN (UseN chest_N) (UseN cabinet_N)) ;
  Chewing = UseN2 (VerbToNounV2 chew_V2) ;
  Chicken = UseN chicken_N ;
  ChickenMeat = ApposCN (UseN chicken_N) (MassNP (UseN meat_N)) ;
  Chimney = UseN chimney_N ;
  Chin = UseN chin_N ;
  ChristianBible = AdjCN (PositA christian_A) (UseN bible_N) ;
  ChristianGospel = AdjCN (PositA christian_A) (UseN gospel_N) ;
  ChristianService = AdjCN (PositA christian_A) (UseN service_N) ;
  CigarOrCigarette = ConjCN or_Conj (BaseCN (UseN cigar_N) (UseN cigarette_N)) ;
  CircleSector = ApposCN (UseN circle_N) (MassNP (UseN sector_N)) ;
  CityBlock = ApposCN (UseN city_N) (MassNP (UseN block_N)) ;
  CityDistrict = ApposCN (UseN city_N) (MassNP (UseN district_N)) ;
  CityGovernment = ApposCN (UseN city_N) (MassNP (UseN government_N)) ;
  CivilWar = AdjCN (PositA civil_A) (UseN war_N) ;
  Civilian = UseN civilian_N ;
  Clamp = UseN clamp_N ;
  Clapping = UseN2 (VerbToNounV2 clap_V2) ;
  ClassificationScheme = ApposCN (UseN classification_N) (MassNP (UseN scheme_N)) ;
  Classroom = UseN classroom_N ;
  Cleric = UseN cleric_N ;
  Cloak = UseN cloak_N ;
  Clock = UseN clock_N ;
  Closet = UseN closet_N ;
  Closing = UseN2 (VerbToNounV2 close_V2) ;
  ClosingContract = AdjCN (PositA (VerbToGerundA close_V2)) (UseN contract_N) ;
  ClosingEyes = AdjCN (PositA (VerbToGerundA close_V2)) (UseN eye_N) ;
  ClothingSuit = AdjCN (PositA (VerbToGerundA clothe_V2)) (UseN suit_N) ;
  CoastGuard = ApposCN (UseN coast_N) (MassNP (UseN guard_N)) ;
  Coat = UseN coat_N ;
  Coffee = UseN coffee_N ;
  Coffin = UseN coffin_N ;
  Collage = UseN collage_N ;
  Collar = UseN collar_N ;
  College = UseN college_N ;
  CollegeStudentPosition = ApposCN (ApposCN (UseN college_N) (MassNP (UseN student_N))) (MassNP (UseN position_N)) ;
  Colonel = UseN colonel_N ;
  CommercialBuilding = AdjCN (PositA commercial_A) (UseN building_N) ;
  CommercialShipping = AdjCN (PositA commercial_A) (UseN shipping_N) ;
  CommercialUnit = AdjCN (PositA commercial_A) (UseN unit_N) ;
  Commission = UseN commission_N ;
  CommunicationOrganization = ApposCN (UseN communication_N) (MassNP (UseN organization_N)) ;
  CommunicationSystem = ApposCN (UseN communication_N) (MassNP (UseN system_N)) ;
  CommunistParty = AdjCN (PositA communist_A) (UseN party_N) ;
  Compartment = UseN compartment_N ;
  Compass = UseN compass_N ;
  Composing = UseN2 (VerbToNounV2 compose_V2) ;
  ComposingMusic = AdjCN (PositA (VerbToGerundA compose_V2)) (UseN music_N) ;
  Concealing = UseN2 (VerbToNounV2 conceal_V2) ;
  CondominiumBuilding = ApposCN (UseN condominium_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 build_V2))) ;
  CondominiumUnit = ApposCN (UseN condominium_N) (MassNP (UseN unit_N)) ;
  Cone = UseN cone_N ;
  ConfederateSoldier = AdjCN (PositA confederate_A) (UseN soldier_N) ;
  Congratulating = UseN2 (VerbToNounV2 congratulate_V2) ;
  ConjugatedSubstance = AdjCN (PositA (VerbToParticipeA conjugate_V)) (UseN substance_N) ;
  Consonant = UseN consonant_N ;
  Container = UseN container_N ;
  ContraceptiveDevice = AdjCN (PositA contraceptive_A) (UseN device_N) ;
  Convoy = UseN convoy_N ;
  CoolingDevice = AdjCN (PositA (VerbToGerundA cool_V2)) (UseN device_N) ;
  Copying = UseN2 (VerbToNounV2 copy_V2) ;
  Corporal = UseN corporal_N ;
  Corresponding = UseN (VerbToNoun correspond_V) ;
  Cotton = UseN cotton_N ;
  CottonFabric = ApposCN (UseN cotton_N) (MassNP (UseN fabric_N)) ;
  CourtRoom = ApposCN (UseN court_N) (MassNP (UseN room_N)) ;
  Cow = UseN cow_N ;
  Crane = UseN crane_N ;
  Creek = UseN creek_N ;
  CriminalAction = AdjCN (PositA criminal_A) (UseN action_N) ;
  CriminalGang = AdjCN (PositA criminal_A) (UseN gang_N) ;
  CultivatedLandArea = AdjCN (PositA cultivated_A) (ApposCN (UseN land_N) (MassNP (UseN area_N))) ;
  Curb = UseN curb_N ;
  CurrencyBill = ApposCN (UseN currency_N) (MassNP (UseN bill_N)) ;
  CurrencyCoin = ApposCN (UseN currency_N) (MassNP (UseN coin_N)) ;
  Curtain = UseN curtain_N ;
  CuttingDevice = AdjCN (PositA cutting_A) (UseN device_N) ;
  Cylinder = UseN cylinder_N ;
  DaySchool = ApposCN (UseN day_N) (MassNP (UseN school_N)) ;
  DayTime = ApposCN (UseN day_N) (MassNP (UseN time_N)) ;
  Deacon = UseN deacon_N ;
  Debating = UseN2 (VerbToNounV2 debate_V2) ;
  Decelerating = UseN2 (VerbToNounV2 decelerate_V2) ;
  Desk = UseN desk_N ;
  Detergent = UseN detergent_N ;
  DeviceAttribute = ApposCN (UseN device_N) (MassNP (UseN attribute_N)) ;
  DeviceStateAttribute = ApposCN (ApposCN (UseN device_N) (MassNP (UseN state_N))) (MassNP (UseN attribute_N)) ;
  Diamond = UseN diamond_N ;
  Dictionary = UseN dictionary_N ;
  DieselEngine = ApposCN (UseN diesel_N) (MassNP (UseN engine_N)) ;
  Diet = UseN diet_N ;
  Digging = UseN digging_N ;
  DigitAppendage = ApposCN (UseN digit_N) (MassNP (UseN appendage_N)) ;
  DigitCharacter = ApposCN (UseN digit_N) (MassNP (UseN character_N)) ;
  Diluting = UseN2 (VerbToNounV2 dilute_V2) ;
  DiningRoom = AdjCN (PositA (VerbToGerundA dine_V2)) (UseN room_N) ;
  Dish = UseN dish_N ;
  Dismounting = UseN2 (VerbToNounV2 dismount_V2) ;
  DisplayArtifact = ApposCN (UseN display_N) (MassNP (UseN artifact_N)) ;
  DistilledAlcoholicBeverage = AdjCN (PositA (VerbToParticipeA distil_V)) (AdjCN (PositA alcoholic_A) (UseN beverage_N)) ;
  Divorcing = UseN2 (VerbToNounV2 divorce_V2) ;
  Dodging = UseN2 (VerbToNounV2 dodge_V2) ;
  DomesticAnimal = AdjCN (PositA domestic_A) (UseN animal_N) ;
  DomesticCat = AdjCN (PositA domestic_A) (UseN cat_N) ;
  DomesticDog = AdjCN (PositA domestic_A) (UseN dog_N) ;
  Donkey = UseN donkey_N ;
  Door = UseN door_N ;
  Doorway = UseN doorway_N ;
  Dormitory = UseN dormitory_N ;
  Dough = UseN dough_N ;
  DramaticActing = AdjCN (PositA dramatic_A) (UseN acting_N) ;
  DramaticCast = AdjCN (PositA dramatic_A) (UseN cast_N) ;
  DramaticDirecting = AdjCN (PositA dramatic_A) (UseN2 (VerbToNounV2 direct_V2)) ;
  DramaticPerformance = AdjCN (PositA dramatic_A) (UseN performance_N) ;
  DramaticPlay = AdjCN (PositA dramatic_A) (UseN play_N) ;
  Drawing = UseN drawing_N ;
  Dreaming = UseN2 (VerbToNounV2 dream_V2) ;
  Dress = UseN dress_N ;
  Dressing = UseN dressing_N ;
  DressingRoom = AdjCN (PositA (VerbToGerundA dress_V2)) (UseN room_N) ;
  Drill = UseN drill_N ;
  Drilling = UseN2 (VerbToNounV2 drill_V2) ;
  DrinkingCup = AdjCN (PositA (VerbToGerundA drink_V2)) (UseN cup_N) ;
  Dripping = UseN dripping_N ;
  DriveComponent = ApposCN (UseN drive_N) (MassNP (UseN component_N)) ;
  Driveway = UseN driveway_N ;
  DrugStore = ApposCN (UseN drug_N) (MassNP (UseN store_N)) ;
  Drum = UseN drum_N ;
  Drumming = UseN2 (VerbToNounV2 drum_V2) ;
  Duck = UseN duck_N ;
  Ducking = UseN ducking_N ;
  DutyTax = ApposCN (UseN duty_N) (MassNP (UseN tax_N)) ;
  Ear = UseN ear_N ;
  Echoing = UseN2 (VerbToNounV2 echo_V2) ;
  EducationalCourse = AdjCN (PositA educational_A) (UseN course_N) ;
  EducationalFacility = AdjCN (PositA educational_A) (UseN facility_N) ;
  EducationalProgram = AdjCN (PositA educational_A) (UseN program_N) ;
  Elbow = UseN elbow_N ;
  ElectoralCollegeElection = AdjCN (PositA electoral_A) (ApposCN (UseN college_N) (MassNP (UseN election_N))) ;
  ElectricDevice = AdjCN (PositA electric_A) (UseN device_N) ;
  ElectricMotor = AdjCN (PositA electric_A) (UseN motor_N) ;
  ElectricalSignalling = AdjCN (PositA electrical_A) (UseN2 (VerbToNounV2 signal_V2)) ;
  ElectronicSignalling = AdjCN (PositA electronic_A) (UseN2 (VerbToNounV2 signal_V2)) ;
  Elephant = UseN elephant_N ;
  Elevator = UseN elevator_N ;
  EmbassyBuilding = ApposCN (UseN embassy_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 build_V2))) ;
  Embracing = UseN2 (VerbToNounV2 embrace_V2) ;
  EmploymentFiring = ApposCN (UseN employment_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 fire_V2))) ;
  Engine = UseN engine_N ;
  EntertainmentBuilding = ApposCN (UseN entertainment_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 build_V2))) ;
  EntertainmentCompany = ApposCN (UseN entertainment_N) (MassNP (UseN company_N)) ;
  EntertainmentProfession = ApposCN (UseN entertainment_N) (MassNP (UseN profession_N)) ;
  Entombing = UseN2 (VerbToNounV2 entomb_V2) ;
  Envelope = UseN envelope_N ;
  Escaping = UseN2 (VerbToNounV2 escape_V2) ;
  Espionage = UseN espionage_N ;
  EuropeanNation = AdjCN (PositA european_A) (UseN nation_N) ;
  Execution = UseN execution_N ;
  ExecutiveResidence = AdjCN (PositA executive_A) (UseN residence_N) ;
  Exhaling = UseN2 (VerbToNounV2 exhale_V2) ;
  Explosion = UseN explosion_N ;
  ExplosiveDevice = AdjCN (PositA explosive_A) (UseN device_N) ;
  ExplosiveMine = AdjCN (PositA explosive_A) (UseN mine_N) ;
  ExplosiveSubstance = AdjCN (PositA explosive_A) (UseN substance_N) ;
  ExpressingApproval = AdjCN (PositA (VerbToGerundA express_V2)) (UseN approval_N) ;
  ExpressingDisapproval = AdjCN (PositA (VerbToGerundA express_V2)) (UseN disapproval_N) ;
  ExpressingFarewell = AdjCN (PositA (VerbToGerundA express_V2)) (UseN farewell_N) ;
  ExpressingInLanguage = AdjCN (PositA (VerbToGerundA express_V2)) (ApposCN (UseN in_N) (MassNP (UseN language_N))) ;
  Eye = UseN eye_N ;
  EyeGlass = ApposCN (UseN eye_N) (MassNP (UseN glass_N)) ;
  EyeMotion = ApposCN (UseN eye_N) (MassNP (UseN motion_N)) ;
  Eyelid = UseN eyelid_N ;
  Face = UseN face_N ;
  FacialExpression = AdjCN (PositA facial_A) (UseN expression_N) ;
  FacialHair = AdjCN (PositA facial_A) (UseN hair_N) ;
  Fact = UseN fact_N ;
  Factory = UseN factory_N ;
  FallSeason = ApposCN (UseN fall_N) (MassNP (UseN season_N)) ;
  FallingAsleep = AdvCN (UseN2 (VerbToNounV2 befall_V2)) asleep_Adv ;
  Fallout = UseN fallout_N ;
  FamilyBusiness = ApposCN (UseN family_N) (MassNP (UseN business_N)) ;
  FanDevice = ApposCN (UseN fan_N) (MassNP (UseN device_N)) ;
  Farm = UseN farm_N ;
  FarmBuilding = ApposCN (UseN farm_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 build_V2))) ;
  Farming = UseN2 (VerbToNounV2 farm_V2) ;
  Feather = UseN feather_N ;
  Feeding = UseN2 (VerbToNounV2 breastfeed_V2) ;
  FemaleCow = AdjCN (PositA female_A) (UseN cow_N) ;
  Fence = UseN fence_N ;
  Field = UseN field_N ;
  Fighter = UseN fighter_N ;
  FileDevice = ApposCN (UseN file_N) (MassNP (UseN device_N)) ;
  FilmDirector = ApposCN (UseN film_N) (MassNP (UseN director_N)) ;
  FilmMaking = ApposCN (UseN film_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 make_V2))) ;
  FilmMakingProfession = ApposCN (ApposCN (UseN film_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 make_V2)))) (MassNP (UseN profession_N)) ;
  FilmProducer = ApposCN (UseN film_N) (MassNP (UseN producer_N)) ;
  Filter = UseN filter_N ;
  FinancialBill = AdjCN (PositA financial_A) (UseN bill_N) ;
  FinancialCompany = AdjCN (PositA financial_A) (UseN company_N) ;
  FinancialService = AdjCN (PositA financial_A) (UseN service_N) ;
  FinancialText = AdjCN (PositA financial_A) (UseN text_N) ;
  Financing = UseN2 (VerbToNounV2 finance_V2) ;
  Finger = UseN finger_N ;
  Fingerprint = UseN fingerprint_N ;
  FiniteQuantity = AdjCN (PositA finite_A) (UseN quantity_N) ;
  Firearm = UseN firearm_N ;
  Fireplace = UseN fireplace_N ;
  FishMeat = ApposCN (UseN fish_N) (MassNP (UseN meat_N)) ;
  Flag = UseN flag_N ;
  Flooding = UseN2 (VerbToNounV2 flood_V2) ;
  Floor = UseN floor_N ;
  Flour = UseN flour_N ;
  Flower = UseN flower_N ;
  FluidContainer = AdjCN (PositA fluid_A) (UseN container_N) ;
  FlyInsect = AdjCN (PositA fly_A) (UseN insect_N) ;
  Flying = UseN2 (VerbToNounV2 fly_V2) ;
  Focusing = UseN2 (VerbToNounV2 focus_V2) ;
  Fog = UseN fog_N ;
  Folding = UseN2 (VerbToNounV2 fold_V2) ;
  Foot = UseN foot_N ;
  FormOfGovernment = AdvCN (UseN form_N) (PrepNP part_Prep (MassNP (UseN government_N))) ;
  FormText = ApposCN (UseN form_N) (MassNP (UseN text_N)) ;
  FormalMeeting = AdjCN (PositA formal_A) (UseN meeting_N) ;
  FossilFuel = ApposCN (UseN fossil_N) (MassNP (UseN fuel_N)) ;
  Founding = UseN2 (VerbToNounV2 found_V2) ;
  Fox = UseN fox_N ;
  FreeAtom = AdjCN (PositA free_A) (UseN atom_N) ;
  Frightening = UseN2 (VerbToNounV2 frighten_V2) ;
  Frowning = UseN (VerbToNoun frown_V) ;
  Fuel = UseN fuel_N ;
  FullTimePosition = AdjCN (PositA full_A) (ApposCN (UseN time_N) (MassNP (UseN position_N))) ;
  Funeral = UseN funeral_N ;
  Furniture = UseN furniture_N ;
  GainingConsciousness = AdjCN (PositA (VerbToGerundA gain_V2)) (UseN consciousness_N) ;
  GameArtifact = AdjCN (PositA game_A) (UseN artifact_N) ;
  GameAttribute = AdjCN (PositA game_A) (UseN attribute_N) ;
  GameBoard = AdjCN (PositA game_A) (UseN board_N) ;
  GameCall = AdjCN (PositA game_A) (UseN call_N) ;
  GameDie = AdjCN (PositA game_A) (UseN die_N) ;
  GameGoal = AdjCN (PositA game_A) (UseN goal_N) ;
  GamePiece = AdjCN (PositA game_A) (UseN piece_N) ;
  GameReferee = AdjCN (PositA game_A) (UseN referee_N) ;
  GameShot = AdjCN (PositA game_A) (UseN shot_N) ;
  Garage = UseN garage_N ;
  GasolineEngine = ApposCN (UseN gasoline_N) (MassNP (UseN engine_N)) ;
  Girl = UseN girl_N ;
  Glass = UseN glass_N ;
  Glove = UseN glove_N ;
  Glue = UseN glue_N ;
  Goose = UseN goose_N ;
  GovernmentBuilding = ApposCN (UseN government_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 build_V2))) ;
  GovernmentOfficer = ApposCN (UseN government_N) (MassNP (UseN officer_N)) ;
  GovernmentSecretary = ApposCN (UseN government_N) (MassNP (UseN secretary_N)) ;
  GraduateSchool = ApposCN (UseN graduate_N) (MassNP (UseN school_N)) ;
  GraphDiagram = ApposCN (UseN graph_N) (MassNP (UseN diagram_N)) ;
  Grass = UseN grass_N ;
  Grasshopper = UseN grasshopper_N ;
  Greeting = UseN greeting_N ;
  GroceryStore = ApposCN (UseN grocery_N) (MassNP (UseN store_N)) ;
  GroupOfAnimals = AdvCN (UseN group_N) (PrepNP part_Prep (DetCN (DetQuant IndefArt NumSg) (UseN animal_N))) ;
  Guitar = UseN guitar_N ;
  Gun = UseN gun_N ;
  GunBarrel = ApposCN (UseN gun_N) (MassNP (UseN barrel_N)) ;
  GunPowder = ApposCN (UseN gun_N) (MassNP (UseN powder_N)) ;
  GunStock = ApposCN (UseN gun_N) (MassNP (UseN stock_N)) ;
  GunTrigger = ApposCN (UseN gun_N) (MassNP (UseN trigger_N)) ;
  Hair = UseN hair_N ;
  HairRemoval = ApposCN (UseN hair_N) (MassNP (UseN removal_N)) ;
  Hammer = UseN hammer_N ;
  Hand = UseN hand_N ;
  HandGesture = ApposCN (UseN hand_N) (MassNP (UseN gesture_N)) ;
  HandGrenade = ApposCN (UseN hand_N) (MassNP (UseN grenade_N)) ;
  Handle = UseN handle_N ;
  Hanging = UseN hanging_N ;
  Harvesting = UseN2 (VerbToNounV2 harvest_V2) ;
  Hat = UseN hat_N ;
  Head = UseN head_N ;
  Headlight = UseN headlight_N ;
  Heart = UseN heart_N ;
  HeatingDevice = AdjCN (PositA (VerbToGerundA heat_V2)) (UseN device_N) ;
  Helicopter = UseN helicopter_N ;
  Hen = UseN hen_N ;
  HighSchool = AdjCN (PositA high_A) (UseN school_N) ;
  Hijacking = UseN2 (VerbToNounV2 hijack_V2) ;
  Hinge = UseN hinge_N ;
  HistoricalAccount = AdjCN (PositA historical_A) (UseN account_N) ;
  HoistingDevice = AdjCN (PositA (VerbToGerundA hoist_V2)) (UseN device_N) ;
  Holder = UseN holder_N ;
  HolidayCard = ApposCN (UseN holiday_N) (MassNP (UseN card_N)) ;
  Holster = UseN holster_N ;
  HomeBase = ApposCN (UseN home_N) (MassNP (UseN base_N)) ;
  Honey = UseN honey_N ;
  Hoof = UseN hoof_N ;
  Horn = UseN horn_N ;
  HornInstrument = ApposCN (UseN horn_N) (MassNP (UseN instrument_N)) ;
  Horse = UseN horse_N ;
  HorseRiding = ApposCN (UseN horse_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 outride_V2))) ;
  HospitalBuilding = ApposCN (UseN hospital_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 build_V2))) ;
  HospitalOrganization = ApposCN (UseN hospital_N) (MassNP (UseN organization_N)) ;
  HostageTaking = ApposCN (UseN hostage_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 betake_V2))) ;
  Hotel = UseN hotel_N ;
  HumanAdult = AdjCN (PositA human_A) (UseN adult_N) ;
  HumanBaby = AdjCN (PositA human_A) (UseN baby_N) ;
  HumanChild = AdjCN (PositA human_A) (UseN child_N) ;
  HumanCorpse = AdjCN (PositA human_A) (UseN corpse_N) ;
  HumanYouth = AdjCN (PositA human_A) (UseN youth_N) ;
  Hydrocarbon = UseN hydrocarbon_N ;
  Ice = UseN ice_N ;
  Imagining = UseN2 (VerbToNounV2 imagine_V2) ;
  Immigrating = UseN (VerbToNoun immigrate_V) ;
  Imprisoning = UseN2 (VerbToNounV2 imprison_V2) ;
  IncendiaryDeviceAttack = ApposCN (ApposCN (UseN incendiary_N) (MassNP (UseN device_N))) (MassNP (UseN attack_N)) ;
  Inclining = UseN2 (VerbToNounV2 incline_V2) ;
  IncomeTax = ApposCN (UseN income_N) (MassNP (UseN tax_N)) ;
  Indicating = UseN2 (VerbToNounV2 indicate_V2) ;
  IndustrialPlant = AdjCN (PositA industrial_A) (UseN plant_N) ;
  Industry = UseN industry_N ;
  InfectiousDisease = AdjCN (PositA infectious_A) (UseN disease_N) ;
  Infiltration = UseN infiltration_N ;
  InfiniteQuantity = AdjCN (PositA infinite_A) (UseN quantity_N) ;
  Inhaling = UseN2 (VerbToNounV2 inhale_V2) ;
  Inheriting = UseN2 (VerbToNounV2 inherit_V2) ;
  Installing = UseN2 (VerbToNounV2 install_V2) ;
  InstrumentalMusic = AdjCN (PositA instrumental_A) (UseN music_N) ;
  Insulin = UseN insulin_N ;
  InsuranceCompany = ApposCN (UseN insurance_N) (MassNP (UseN company_N)) ;
  InsurancePolicy = ApposCN (UseN insurance_N) (MassNP (UseN policy_N)) ;
  InternalCombustionEngine = AdjCN (PositA internal_A) (ApposCN (UseN combustion_N) (MassNP (UseN engine_N))) ;
  Interviewing = UseN2 (VerbToNounV2 interview_V2) ;
  Intestine = UseN intestine_N ;
  Ion = UseN ion_N ;
  Ivory = UseN ivory_N ;
  Janitor = UseN janitor_N ;
  Journalist = UseN journalist_N ;
  Judge = UseN judge_N ;
  Jumping = UseN2 (VerbToNounV2 jump_V2) ;
  JuniorCollege = AdjCN (PositA junior_A) (UseN college_N) ;
  Jury = UseN jury_N ;
  Key = UseN key_N ;
  Kicking = UseN2 (VerbToNounV2 kick_V2) ;
  Kidnapping = UseN2 (VerbToNounV2 kidnap_V2) ;
  Kidney = UseN kidney_N ;
  Kissing = UseN2 (VerbToNounV2 kiss_V2) ;
  Kitchen = UseN kitchen_N ;
  Knee = UseN knee_N ;
  Knife = UseN knife_N ;
  KnifeAttack = ApposCN (UseN knife_N) (MassNP (UseN attack_N)) ;
  Knuckle = UseN knuckle_N ;
  Label = UseN label_N ;
  Laboratory = UseN laboratory_N ;
  Ladder = UseN ladder_N ;
  Lamb = UseN lamb_N ;
  LandTransportation = ApposCN (UseN land_N) (MassNP (UseN transportation_N)) ;
  LandVehicle = ApposCN (UseN land_N) (MassNP (UseN vehicle_N)) ;
  Landing = UseN landing_N ;
  Laughing = UseN2 (VerbToNounV2 laugh_V2) ;
  LawEnforcement = ApposCN (UseN law_N) (MassNP (UseN enforcement_N)) ;
  Lawn = UseN lawn_N ;
  LayingEggs = AdjCN (PositA (VerbToGerundA inlay_V2)) (UseN egg_N) ;
  Leather = UseN leather_N ;
  Leaving = UseN2 (VerbToNounV2 leave_V2) ;
  Lecture = UseN lecture_N ;
  Leg = UseN leg_N ;
  LegalAppeal = AdjCN (PositA legal_A) (UseN appeal_N) ;
  LegalAward = AdjCN (PositA legal_A) (UseN award_N) ;
  LegalCharge = AdjCN (PositA legal_A) (UseN charge_N) ;
  LegalConviction = AdjCN (PositA legal_A) (UseN conviction_N) ;
  LegalDismissal = AdjCN (PositA legal_A) (UseN dismissal_N) ;
  LegalOpinion = AdjCN (PositA legal_A) (UseN opinion_N) ;
  LegalSummons = AdjCN (PositA legal_A) (UseN summons_N) ;
  LemonFruit = ApposCN (UseN lemon_N) (MassNP (UseN fruit_N)) ;
  Lengthening = UseN2 (VerbToNounV2 lengthen_V2) ;
  Lens = UseN lens_N ;
  Lesion = UseN lesion_N ;
  Letter = UseN letter_N ;
  LetterBombAttack = ApposCN (ApposCN (UseN letter_N) (MassNP (UseN bomb_N))) (MassNP (UseN attack_N)) ;
  Library = UseN library_N ;
  Licking = UseN licking_N ;
  Lieutenant = UseN lieutenant_N ;
  LightFixture = AdjCN (PositA light_A) (UseN fixture_N) ;
  Lightning = UseN lightning_N ;
  Lilac = UseN lilac_N ;
  Limb = UseN limb_N ;
  LinguisticAttribute = AdjCN (PositA linguistic_A) (UseN attribute_N) ;
  Lip = UseN lip_N ;
  LiquefiedPetroleumGas = AdjCN (PositA (VerbToParticipeA liquefy_V)) (ApposCN (UseN petroleum_N) (MassNP (UseN gas_N))) ;
  LiquidBodySubstance = AdjCN (PositA liquid_A) (ApposCN (UseN body_N) (MassNP (UseN substance_N))) ;
  Liver = UseN liver_N ;
  LoadingWeapon = AdjCN (PositA (VerbToGerundA load_V2)) (UseN weapon_N) ;
  Lock = UseN lock_N ;
  LosingConsciousness = AdjCN (PositA (VerbToGerundA lose_V2)) (UseN consciousness_N) ;
  Lung = UseN lung_N ;
  LyingDown = AdjCN (PositA (VerbToGerundA belie_V2)) (UseN down_N) ;
  Lynching = UseN2 (VerbToNounV2 lynch_V2) ;
  Lyrics = UseN lyric_N ;
  Magazine = UseN magazine_N ;
  Magnetism = UseN magnetism_N ;
  Maid = UseN maid_N ;
  Mailbox = UseN mailbox_N ;
  Mailing = UseN2 (VerbToNounV2 mail_V2) ;
  MaizeGrain = ApposCN (UseN maize_N) (MassNP (UseN grain_N)) ;
  MajorGeneral = AdjCN (PositA major_A) (UseN general_N) ;
  Manifold = UseN manifold_N ;
  Map = UseN map_N ;
  Marble = UseN marble_N ;
  Marketplace = UseN marketplace_N ;
  Marshal = UseN marshal_N ;
  Massaging = UseN2 (VerbToNounV2 massage_V2) ;
  Mast = UseN mast_N ;
  MatchDevice = ApposCN (UseN match_N) (MassNP (UseN device_N)) ;
  MaterialHandlingEquipment = AdjCN (PositA material_A) (AdjCN (PositA (VerbToGerundA handle_V2)) (UseN equipment_N)) ;
  Mating = UseN2 (VerbToNounV2 mate_V2) ;
  MedicalClinic = AdjCN (PositA medical_A) (UseN clinic_N) ;
  MedicalClinicBuilding = AdjCN (PositA medical_A) (ApposCN (UseN clinic_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 build_V2)))) ;
  MedicalSchool = AdjCN (PositA medical_A) (UseN school_N) ;
  Medicine = UseN medicine_N ;
  Memorizing = UseN2 (VerbToNounV2 memorize_V2) ;
  Menstruation = UseN menstruation_N ;
  Message = UseN message_N ;
  MetallicAlloy = AdjCN (PositA metallic_A) (UseN alloy_N) ;
  Meteorite = UseN meteorite_N ;
  Microphone = UseN microphone_N ;
  Microscope = UseN microscope_N ;
  MilitaryAircraft = AdjCN (PositA military_A) (UseN aircraft_N) ;
  MilitaryArtifact = AdjCN (PositA military_A) (UseN artifact_N) ;
  MilitaryCorps = AdjCN (PositA military_A) (UseN corps_N) ;
  MilitaryFront = AdjCN (PositA military_A) (UseN front_N) ;
  MilitaryInfiltration = AdjCN (PositA military_A) (UseN infiltration_N) ;
  MilitaryInstallation = AdjCN (PositA military_A) (UseN installation_N) ;
  MilitaryOfficer = AdjCN (PositA military_A) (UseN officer_N) ;
  MilitaryPrivate = AdjCN (PositA military_A) (UseN private_N) ;
  MilitaryReserveForce = AdjCN (PositA military_A) (ApposCN (UseN reserve_N) (MassNP (UseN force_N))) ;
  MilitaryService = AdjCN (PositA military_A) (UseN service_N) ;
  MilitaryShip = AdjCN (PositA military_A) (UseN ship_N) ;
  MilitarySquad = AdjCN (PositA military_A) (UseN squad_N) ;
  MilitarySurplus = AdjCN (PositA military_A) (UseN surplus_N) ;
  MilitaryTank = AdjCN (PositA military_A) (UseN tank_N) ;
  MilitaryUnit = AdjCN (PositA military_A) (UseN unit_N) ;
  MilitaryVehicle = AdjCN (PositA military_A) (UseN vehicle_N) ;
  MilitaryWaterVehicle = AdjCN (PositA military_A) (ApposCN (UseN water_N) (MassNP (UseN vehicle_N))) ;
  Milk = UseN milk_N ;
  Mine = UseN mine_N ;
  Mirror = UseN mirror_N ;
  Missile = UseN missile_N ;
  MissionOrganization = ApposCN (UseN mission_N) (MassNP (UseN organization_N)) ;
  MobileResidence = AdjCN (PositA mobile_A) (UseN residence_N) ;
  ModellingPosition = AdjCN (PositA (VerbToGerundA model_V2)) (UseN position_N) ;
  Monument = UseN monument_N ;
  Morning = UseN morning_N ;
  Mortar = UseN mortar_N ;
  MortarAttack = ApposCN (UseN mortar_N) (MassNP (UseN attack_N)) ;
  MortarGun = ApposCN (UseN mortar_N) (MassNP (UseN gun_N)) ;
  Moth = UseN moth_N ;
  MotionPictureScene = ApposCN (ApposCN (UseN motion_N) (MassNP (UseN picture_N))) (MassNP (UseN scene_N)) ;
  MotionPictureShot = ApposCN (ApposCN (UseN motion_N) (MassNP (UseN picture_N))) (MassNP (UseN shot_N)) ;
  Motorcycle = UseN motorcycle_N ;
  Mounting = UseN2 (VerbToNounV2 mount_V2) ;
  Mouse = UseN mouse_N ;
  Mouth = UseN mouth_N ;
  MovingResidence = AdjCN (PositA (VerbToGerundA move_V2)) (UseN residence_N) ;
  Mule = UseN mule_N ;
  Murder = UseN murder_N ;
  Museum = UseN museum_N ;
  MusicRecording = ApposCN (UseN music_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 record_V2))) ;
  MusicText = ApposCN (UseN music_N) (MassNP (UseN text_N)) ;
  MusicalComposition = AdjCN (PositA musical_A) (UseN composition_N) ;
  MusicalGroup = AdjCN (PositA musical_A) (UseN group_N) ;
  MusicalPerformance = AdjCN (PositA musical_A) (UseN performance_N) ;
  MusicalTone = AdjCN (PositA musical_A) (UseN tone_N) ;
  MysteryStory = ApposCN (UseN mystery_N) (MassNP (UseN story_N)) ;
  Nail = UseN nail_N ;
  NailDigit = ApposCN (UseN nail_N) (MassNP (UseN digit_N)) ;
  NarrativeText = ApposCN (UseN narrative_N) (MassNP (UseN text_N)) ;
  NationalFlag = AdjCN (PositA national_A) (UseN flag_N) ;
  Neck = UseN neck_N ;
  Nectar = UseN nectar_N ;
  Negotiating = UseN2 (VerbToNounV2 negotiate_V2) ;
  NerveCell = ApposCN (UseN nerve_N) (MassNP (UseN cell_N)) ;
  NervousSystem = AdjCN (PositA nervous_A) (UseN system_N) ;
  Nest = UseN nest_N ;
  Neurosis = UseN neurosis_N ;
  NewTestament = AdjCN (PositA new_A) (UseN testament_N) ;
  NewsProgram = ApposCN (UseN news_N) (MassNP (UseN program_N)) ;
  Newspaper = UseN newspaper_N ;
  NightTime = ApposCN (UseN night_N) (MassNP (UseN time_N)) ;
  Nodding = UseN2 (VerbToNounV2 nod_V2) ;
  Nose = UseN nose_N ;
  Nostril = UseN nostril_N ;
  Novel = UseN novel_N ;
  NuclearFamily = AdjCN (PositA nuclear_A) (UseN family_N) ;
  NuclearWeapon = AdjCN (PositA nuclear_A) (UseN weapon_N) ;
  OakWood = ApposCN (UseN oak_N) (MassNP (UseN wood_N)) ;
  Oar = UseN oar_N ;
  ObliqueAngle = AdjCN (PositA oblique_A) (UseN angle_N) ;
  OccupationalRole = AdjCN (PositA occupational_A) (UseN role_1_N) ;
  OccupationalTrade = AdjCN (PositA occupational_A) (UseN trade_N) ;
  OfferingForSale = AdvCN (UseN offering_N) (PrepNP for_Prep (MassNP (UseN sale_N))) ;
  OfferingToPurchase = AdvCN (UseN offering_N) (PrepNP to_Prep (MassNP (UseN purchase_N))) ;
  OfficeBuilding = ApposCN (UseN office_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 build_V2))) ;
  Oil = UseN oil_N ;
  OilPaint = ApposCN (UseN oil_N) (MassNP (UseN paint_N)) ;
  OilPicture = ApposCN (UseN oil_N) (MassNP (UseN picture_N)) ;
  OldTestament = AdjCN (PositA old_A) (UseN testament_N) ;
  Ontology = UseN ontology_N ;
  Opening = UseN opening_N ;
  OpeningEyes = AdjCN (PositA opening_A) (UseN eye_N) ;
  Opera = UseN opera_N ;
  OpticalDevice = AdjCN (PositA optical_A) (UseN device_N) ;
  OrangeFruit = AdjCN (PositA orange_A) (UseN fruit_N) ;
  Orchestra = UseN orchestra_N ;
  OrchestralConducting = AdjCN (PositA orchestral_A) (UseN2 (VerbToNounV2 conduct_V2)) ;
  Order = UseN order_N ;
  OrganicCompound = AdjCN (PositA organic_A) (UseN compound_N) ;
  OrganizationalBoard = AdjCN (PositA organizational_A) (UseN board_N) ;
  OrganizationalMerging = AdjCN (PositA organizational_A) (UseN2 (VerbToNounV2 merge_V2)) ;
  Orthography = UseN orthography_N ;
  Ossification = UseN ossification_N ;
  OutdoorClothing = AdjCN (PositA outdoor_A) (UseN clothing_N) ;
  OuterSpaceRegion = AdjCN (PositA outer_A) (ApposCN (UseN space_N) (MassNP (UseN region_N))) ;
  Oven = UseN oven_N ;
  Owl = UseN owl_N ;
  Oxidation = UseN oxidation_N ;
  Paint = UseN paint_N ;
  PaintedPicture = AdjCN (PositA (VerbToParticipeA paint_V)) (UseN picture_N) ;
  Painting = UseN painting_N ;
  Pancreas = UseN pancreas_N ;
  Paper = UseN paper_N ;
  Paragraph = UseN paragraph_N ;
  Park = UseN park_N ;
  ParkingLot = AdjCN (PositA (VerbToGerundA park_V2)) (UseN lot_N) ;
  PartTimePosition = ApposCN (ApposCN (UseN part_N) (MassNP (UseN time_N))) (MassNP (UseN position_N)) ;
  Partnership = UseN partnership_N ;
  PartyPlatform = ApposCN (UseN party_N) (MassNP (UseN platform_N)) ;
  PassCertificate = ApposCN (UseN pass_N) (MassNP (UseN certificate_N)) ;
  PassingABill = ApposCN (UseN passing_N) (DetCN (DetQuant IndefArt NumSg) (UseN bill_N)) ;
  Passport = UseN passport_N ;
  PeaceKeepingMission = ApposCN (ApposCN (UseN peace_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 keep_V2)))) (MassNP (UseN mission_N)) ;
  PearFruit = ApposCN (UseN pear_N) (MassNP (UseN fruit_N)) ;
  Peeling = UseN2 (VerbToNounV2 peel_V2) ;
  Pencil = UseN pencil_N ;
  PensionPlan = ApposCN (UseN pension_N) (MassNP (UseN plan_N)) ;
  PercussionInstrument = ApposCN (UseN percussion_N) (MassNP (UseN instrument_N)) ;
  Performance = UseN performance_N ;
  PerformanceAct = ApposCN (UseN performance_N) (MassNP (UseN act_N)) ;
  PerformanceProgram = ApposCN (UseN performance_N) (MassNP (UseN program_N)) ;
  PerformanceStage = ApposCN (UseN performance_N) (MassNP (UseN stage_N)) ;
  PerformanceStageWing = ApposCN (ApposCN (UseN performance_N) (MassNP (UseN stage_N))) (MassNP (UseN wing_N)) ;
  PeriodicalPublisher = AdjCN (PositA periodical_A) (UseN publisher_N) ;
  PetroleumProduct = ApposCN (UseN petroleum_N) (MassNP (UseN product_N)) ;
  Pharmacist = UseN pharmacist_N ;
  Photograph = UseN photograph_N ;
  PhotographicFilm = AdjCN (PositA photographic_A) (UseN film_N) ;
  Photographing = UseN2 (VerbToNounV2 photograph_V2) ;
  Piano = UseN piano_N ;
  PictureFrame = ApposCN (UseN picture_N) (MassNP (UseN frame_N)) ;
  Pig = UseN pig_N ;
  Pigeon = UseN pigeon_N ;
  Pillow = UseN pillow_N ;
  Pistol = UseN pistol_N ;
  PitchersMound = ApposCN (UseN pitcher_N) (MassNP (UseN mound_N)) ;
  Pitching = UseN2 (VerbToNounV2 pitch_V2) ;
  PituitaryGland = AdjCN (PositA pituitary_A) (UseN gland_N) ;
  PlaceOfCommerce = AdvCN (UseN place_N) (PrepNP part_Prep (MassNP (UseN commerce_N))) ;
  PlaceOfWorship = AdvCN (UseN place_N) (PrepNP part_Prep (MassNP (UseN worship_N))) ;
  PlacingUnderArrest = AdvCN (UseN placing_N) (PrepNP under_Prep (MassNP (UseN arrest_N))) ;
  PlantBranch = ApposCN (UseN plant_N) (MassNP (UseN branch_N)) ;
  PlantLeaf = ApposCN (UseN plant_N) (MassNP (UseN leaf_N)) ;
  PlantRoot = ApposCN (UseN plant_N) (MassNP (UseN root_N)) ;
  PlayingCard = AdjCN (PositA (VerbToGerundA play_V2)) (UseN card_N) ;
  Pleading = UseN2 (VerbToNounV2 plead_V2) ;
  Plug = UseN plug_N ;
  Pocket = UseN pocket_N ;
  PoliticalCrime = AdjCN (PositA political_A) (UseN crime_N) ;
  PoliticalFigure = AdjCN (PositA political_A) (UseN figure_N) ;
  PoliticalRevolution = AdjCN (PositA political_A) (UseN revolution_N) ;
  Polling = UseN2 (VerbToNounV2 poll_V2) ;
  Polygon = UseN polygon_N ;
  PolyphonicMusic = AdjCN (PositA polyphonic_A) (UseN music_N) ;
  PopularElection = AdjCN (PositA popular_A) (UseN election_N) ;
  Porch = UseN porch_N ;
  Pork = UseN pork_N ;
  Portrait = UseN portrait_N ;
  PostSecondarySchool = ApposCN (UseN post_N) (MassNP (AdjCN (PositA secondary_A) (UseN school_N))) ;
  PotOrPan = ConjCN or_Conj (BaseCN (UseN pot_N) (UseN pan_N)) ;
  Pottery = UseN pottery_N ;
  Pouring = UseN2 (VerbToNounV2 pour_V2) ;
  Powder = UseN powder_N ;
  Praying = UseN2 (VerbToNounV2 pray_V2) ;
  PreparedFood = AdjCN (PositA (VerbToParticipeA prepare_V)) (UseN food_N) ;
  PressureMeasuringDevice = ApposCN (ApposCN (UseN pressure_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 measure_V2)))) (MassNP (UseN device_N)) ;
  Prison = UseN prison_N ;
  PrivateSchool = AdjCN (PositA private_A) (UseN school_N) ;
  Proclaiming = UseN2 (VerbToNounV2 proclaim_V2) ;
  Profession = UseN profession_N ;
  ProfitSharingPlan = ApposCN (ApposCN (UseN profit_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 share_V2)))) (MassNP (UseN plan_N)) ;
  Projectile = UseN projectile_N ;
  ProjectileLauncher = AdjCN (PositA projectile_A) (UseN launcher_N) ;
  ProjectileShell = AdjCN (PositA projectile_A) (UseN shell_N) ;
  ProjectionScreen = ApposCN (UseN projection_N) (MassNP (UseN screen_N)) ;
  Psychosis = UseN psychosis_N ;
  PublicDefender = AdjCN (PositA public_A) (UseN defender_N) ;
  PublicLibrary = AdjCN (PositA public_A) (UseN library_N) ;
  PublicPark = AdjCN (PositA public_A) (UseN park_N) ;
  PublicProsecutor = AdjCN (PositA public_A) (UseN prosecutor_N) ;
  PublicSchool = AdjCN (PositA public_A) (UseN school_N) ;
  Publisher = UseN publisher_N ;
  Pulling = UseN2 (VerbToNounV2 pull_V2) ;
  PulmonaryArtery = AdjCN (PositA pulmonary_A) (UseN artery_N) ;
  PulmonaryVein = AdjCN (PositA pulmonary_A) (UseN vein_N) ;
  Pump = UseN pump_N ;
  Punching = UseN2 (VerbToNounV2 punch_V2) ;
  Punishing = UseN2 (VerbToNounV2 punish_V2) ;
  Quadrilateral = UseN quadrilateral_N ;
  QueenInsect = ApposCN (UseN queen_N) (MassNP (UseN insect_N)) ;
  Question = UseN question_N ;
  Rabbit = UseN rabbit_N ;
  Racing = UseN racing_N ;
  Radar = UseN radar_N ;
  RadiatingVisibleLight = AdjCN (PositA (VerbToGerundA radiate_V2)) (AdjCN (PositA visible_A) (UseN light_N)) ;
  RadioBroadcasting = ApposCN (UseN radio_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 broadcast_V2))) ;
  RadioEmission = ApposCN (UseN radio_N) (MassNP (UseN emission_N)) ;
  RadioReceiver = ApposCN (UseN radio_N) (MassNP (UseN receiver_N)) ;
  RadioactiveWeapon = AdjCN (PositA radioactive_A) (UseN weapon_N) ;
  Radish = UseN radish_N ;
  RailroadCompany = ApposCN (UseN railroad_N) (MassNP (UseN company_N)) ;
  Ramp = UseN ramp_N ;
  Raping = UseN2 (VerbToNounV2 rape_V2) ;
  Rat = UseN rat_N ;
  Rattlesnake = UseN rattlesnake_N ;
  RawFood = AdjCN (PositA raw_A) (UseN food_N) ;
  RearWindow = ApposCN (UseN rear_N) (MassNP (UseN window_N)) ;
  ReceiverDevice = ApposCN (UseN receiver_N) (MassNP (UseN device_N)) ;
  Reciting = UseN2 (VerbToNounV2 recite_V2) ;
  RecoveringFromIllness = AdvCN (UseN2 (VerbToNounV2 recover_V2)) (PrepNP from_Prep (MassNP (UseN illness_N))) ;
  RecreationOrExerciseDevice = ApposCN (ConjCN or_Conj (BaseCN (UseN recreation_N) (UseN exercise_N))) (MassNP (UseN device_N)) ;
  Rectangle = UseN rectangle_N ;
  RedBloodCell = AdjCN (PositA red_A) (ApposCN (UseN blood_N) (MassNP (UseN cell_N))) ;
  RedcoatSoldier = ApposCN (UseN redcoat_N) (MassNP (UseN soldier_N)) ;
  ReferenceBook = ApposCN (UseN reference_N) (MassNP (UseN book_N)) ;
  ReferenceText = ApposCN (UseN reference_N) (MassNP (UseN text_N)) ;
  Reflecting = UseN2 (VerbToNounV2 reflect_V2) ;
  ReflectingLight = AdjCN (PositA (VerbToGerundA reflect_V2)) (UseN light_N) ;
  ReflexiveProcess = AdjCN (PositA reflexive_A) (UseN process_N) ;
  Refrigerator = UseN refrigerator_N ;
  Registering = UseN2 (VerbToNounV2 register_V2) ;
  Regretting = UseN2 (VerbToNounV2 regret_V2) ;
  RelievingPain = AdjCN (PositA (VerbToGerundA relieve_V2)) (UseN pain_N) ;
  ReligiousBuilding = AdjCN (PositA religious_A) (UseN building_N) ;
  ReligiousFigure = AdjCN (PositA religious_A) (UseN figure_N) ;
  ReligiousPosition = AdjCN (PositA religious_A) (UseN position_N) ;
  ReligiousService = AdjCN (PositA religious_A) (UseN service_N) ;
  Reminding = UseN2 (VerbToNounV2 remind_V2) ;
  RemovingClothing = AdjCN (PositA (VerbToGerundA remove_V2)) (UseN clothing_N) ;
  Renting = UseN2 (VerbToNounV2 rent_V2) ;
  Report = UseN report_N ;
  Request = UseN request_N ;
  Researcher = UseN researcher_N ;
  Resigning = UseN2 (VerbToNounV2 resign_V2) ;
  Resolution = UseN resolution_N ;
  Restaurant = UseN restaurant_N ;
  RestaurantBuilding = ApposCN (UseN restaurant_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 build_V2))) ;
  RetailStore = ApposCN (UseN retail_N) (MassNP (UseN store_N)) ;
  Retina = UseN retina_N ;
  Retiring = UseN2 (VerbToNounV2 retire_V2) ;
  Returning = UseN2 (VerbToNounV2 return_V2) ;
  Reversing = UseN2 (VerbToNounV2 reverse_V2) ;
  RevolverGun = ApposCN (UseN revolver_N) (MassNP (UseN gun_N)) ;
  RiceGrain = ApposCN (UseN rice_N) (MassNP (UseN grain_N)) ;
  Rifle = UseN rifle_N ;
  RightAngle = AdjCN (PositA right_A) (UseN angle_N) ;
  RightTriangle = AdjCN (PositA right_A) (UseN triangle_N) ;
  Ringing = UseN2 (VerbToNounV2 ring_V2) ;
  Road = UseN road_N ;
  RoadTransportationSystem = ApposCN (ApposCN (UseN road_N) (MassNP (UseN transportation_N))) (MassNP (UseN system_N)) ;
  RoadVehicle = ApposCN (UseN road_N) (MassNP (UseN vehicle_N)) ;
  Robbing = UseN2 (VerbToNounV2 rob_V2) ;
  Rocket = UseN rocket_N ;
  RocketMissileAttack = ApposCN (ApposCN (UseN rocket_N) (MassNP (UseN missile_N))) (MassNP (UseN attack_N)) ;
  Roof = UseN roof_N ;
  Rooster = UseN rooster_N ;
  Rotating = UseN2 (VerbToNounV2 rotate_V2) ;
  Rowing = UseN rowing_N ;
  Rubber = UseN rubber_N ;
  Rug = UseN rug_N ;
  Saddle = UseN saddle_N ;
  SafeContainer = AdjCN (PositA safe_A) (UseN container_N) ;
  Sailor = UseN sailor_N ;
  Sales = UseN sale_N ;
  SalesPosition = ApposCN (UseN sale_N) (MassNP (UseN position_N)) ;
  SalineSolution = AdjCN (PositA saline_A) (UseN solution_N) ;
  Sandal = UseN sandal_N ;
  Sandwich = UseN sandwich_N ;
  Saving = UseN saving_N ;
  Scar = UseN scar_N ;
  Scholarship = UseN scholarship_N ;
  School = UseN school_N ;
  Science = UseN science_N ;
  Score = UseN score_N ;
  Screw = UseN screw_N ;
  Screwdriver = UseN screwdriver_N ;
  Script = UseN script_N ;
  Sculpture = UseN sculpture_N ;
  SeasonOfYear = AdvCN (UseN season_N) (PrepNP part_Prep (MassNP (UseN year_N))) ;
  Seat = UseN seat_N ;
  Seating = UseN2 (VerbToNounV2 seat_V2) ;
  SecondarySchool = AdjCN (PositA secondary_A) (UseN school_N) ;
  SecurityAlarm = ApposCN (UseN security_N) (MassNP (UseN alarm_N)) ;
  SecurityDevice = ApposCN (UseN security_N) (MassNP (UseN device_N)) ;
  SecurityUnit = ApposCN (UseN security_N) (MassNP (UseN unit_N)) ;
  SeizingProperty = AdjCN (PositA (VerbToGerundA seize_V2)) (UseN property_N) ;
  SelfPoweredDevice = ApposCN (UseN self_N) (MassNP (AdjCN (PositA powered_A) (UseN device_N))) ;
  SelfPoweredRoadVehicle = ApposCN (ApposCN (UseN self_N) (MassNP (AdjCN (PositA powered_A) (UseN road_N)))) (MassNP (UseN vehicle_N)) ;
  Sentencing = UseN2 (VerbToNounV2 sentence_V2) ;
  Sergeant = UseN sergeant_N ;
  Sermon = UseN sermon_N ;
  Serum = UseN serum_N ;
  ServiceOrganization = ApposCN (UseN service_N) (MassNP (UseN organization_N)) ;
  ServicePosition = ApposCN (UseN service_N) (MassNP (UseN position_N)) ;
  Serving = UseN serving_N ;
  SewageSystem = ApposCN (UseN sewage_N) (MassNP (UseN system_N)) ;
  Sewing = UseN sewing_N ;
  Sharing = UseN2 (VerbToNounV2 share_V2) ;
  Sheep = UseN sheep_N ;
  Shelf = UseN shelf_N ;
  Sheriff = UseN sheriff_N ;
  Shield = UseN shield_N ;
  ShipCaptain = ApposCN (UseN ship_N) (MassNP (UseN captain_N)) ;
  ShipMate = ApposCN (UseN ship_N) (MassNP (UseN mate_1_N)) ;
  ShipOfficer = ApposCN (UseN ship_N) (MassNP (UseN officer_N)) ;
  Shipping = UseN shipping_N ;
  Shirt = UseN shirt_N ;
  Shoe = UseN shoe_N ;
  ShoeSole = ApposCN (UseN shoe_N) (MassNP (UseN sole_N)) ;
  ShortStory = AdjCN (PositA short_A) (UseN story_N) ;
  Shortening = UseN shortening_N ;
  ShotBall = AdjCN (PositA (VerbToParticipeA shoot_V)) (UseN ball_N) ;
  Shoulder = UseN shoulder_N ;
  Shrugging = UseN2 (VerbToNounV2 shrug_V2) ;
  Sidewalk = UseN sidewalk_N ;
  Signalling = UseN2 (VerbToNounV2 signal_V2) ;
  Silk = UseN silk_N ;
  Sinking = UseN sinking_N ;
  SittingDown = AdjCN (PositA (VerbToGerundA sit_V2)) (UseN down_N) ;
  Skeleton = UseN skeleton_N ;
  Sketch = UseN sketch_N ;
  SkilledOccupation = AdjCN (PositA skilled_A) (UseN occupation_N) ;
  Skin = UseN skin_N ;
  Skull = UseN skull_N ;
  Skylight = UseN skylight_N ;
  Sleeve = UseN sleeve_N ;
  Smiling = UseN2 (VerbToNounV2 smile_V2) ;
  Smoking = UseN smoking_N ;
  SmokingDevice = AdjCN (PositA (VerbToGerundA smoke_V2)) (UseN device_N) ;
  SmokingPipe = AdjCN (PositA (VerbToGerundA smoke_V2)) (UseN pipe_N) ;
  Smuggling = UseN2 (VerbToNounV2 smuggle_V2) ;
  Snake = UseN snake_N ;
  SoberingUp = AdvCN (UseN2 (VerbToNounV2 sober_V2)) up_Adv ;
  SocialParty = AdjCN (PositA social_A) (UseN party_N) ;
  SocialScience = AdjCN (PositA social_A) (UseN science_N) ;
  Sock = UseN sock_N ;
  SodiumChloride = ApposCN (UseN sodium_N) (MassNP (UseN chloride_N)) ;
  Sofa = UseN sofa_N ;
  Soldering = UseN2 (VerbToNounV2 solder_V2) ;
  Soldier = UseN soldier_N ;
  Somersaulting = UseN (VerbToNoun somersault_V) ;
  Sonar = UseN sonar_N ;
  Song = UseN song_N ;
  SoupStock = ApposCN (UseN soup_N) (MassNP (UseN stock_N)) ;
  SpaceRegion = ApposCN (UseN space_N) (MassNP (UseN region_N)) ;
  SpaceTransportation = ApposCN (UseN space_N) (MassNP (UseN transportation_N)) ;
  Spacecraft = UseN spacecraft_N ;
  Spear = UseN spear_N ;
  Sphere = UseN sphere_N ;
  SpinalColumn = AdjCN (PositA spinal_A) (UseN column_N) ;
  SpinalCord = AdjCN (PositA spinal_A) (UseN cord_N) ;
  Spitting = UseN spitting_N ;
  Spleen = UseN spleen_N ;
  SportServe = ApposCN (UseN sport_N) (MassNP (UseN serve_N)) ;
  SportsAttribute = ApposCN (UseN sport_N) (MassNP (UseN attribute_N)) ;
  SportsFacility = ApposCN (UseN sport_N) (MassNP (UseN facility_N)) ;
  SportsGround = ApposCN (UseN sport_N) (MassNP (UseN ground_N)) ;
  SportsLeague = ApposCN (UseN sport_N) (MassNP (UseN league_N)) ;
  SportsPlay = ApposCN (UseN sport_N) (MassNP (UseN play_N)) ;
  SportsPosition = ApposCN (UseN sport_N) (MassNP (UseN position_N)) ;
  SportsTeam = ApposCN (UseN sport_N) (MassNP (UseN team_N)) ;
  Spraying = UseN2 (VerbToNounV2 spray_V2) ;
  SpringSeason = ApposCN (UseN spring_N) (MassNP (UseN season_N)) ;
  Square = UseN square_N ;
  Squirrel = UseN squirrel_N ;
  StageCoach = ApposCN (UseN stage_N) (MassNP (UseN coach_N)) ;
  Stairway = UseN stairway_N ;
  StandingUp = AdvCN (UseN standing_N) up_Adv ;
  Starch = UseN starch_N ;
  Starving = UseN2 (VerbToNounV2 starve_V2) ;
  StateGovernment = ApposCN (UseN state_N) (MassNP (UseN government_N)) ;
  Statement = UseN statement_N ;
  Stealing = UseN2 (VerbToNounV2 steal_V2) ;
  SteamEngine = ApposCN (UseN steam_N) (MassNP (UseN engine_N)) ;
  Steel = UseN steel_N ;
  Steeple = UseN steeple_N ;
  SteeringWheel = AdjCN (PositA (VerbToGerundA steer_V2)) (UseN wheel_N) ;
  Stepping = UseN2 (VerbToNounV2 step_V2) ;
  Steps = UseN step_N ;
  Stimulant = UseN stimulant_N ;
  Stirring = UseN2 (VerbToNounV2 stir_V2) ;
  Stomach = UseN stomach_N ;
  Stoning = UseN2 (VerbToNounV2 stone_V2) ;
  Store = UseN store_N ;
  StormFront = ApposCN (UseN storm_N) (MassNP (UseN front_N)) ;
  Stove = UseN stove_N ;
  Strangling = UseN2 (VerbToNounV2 strangle_V2) ;
  Streetcar = UseN streetcar_N ;
  Stretching = UseN2 (VerbToNounV2 stretch_V2) ;
  String = UseN string_N ;
  StringInstrument = ApposCN (UseN string_N) (MassNP (UseN instrument_N)) ;
  Submarine = UseN submarine_N ;
  Subway = UseN subway_N ;
  SubwaySystem = ApposCN (UseN subway_N) (MassNP (UseN system_N)) ;
  Suffocating = UseN2 (VerbToNounV2 suffocate_V2) ;
  Sugar = UseN sugar_N ;
  Suicide = UseN suicide_N ;
  SuicideBombing = ApposCN (UseN suicide_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 bomb_V2))) ;
  SummerSeason = ApposCN (UseN summer_N) (MassNP (UseN season_N)) ;
  Sunlight = UseN sunlight_N ;
  Sunrise = UseN sunrise_N ;
  Sunset = UseN sunset_N ;
  Supposition = UseN supposition_N ;
  Surgeon = UseN surgeon_N ;
  Sweat = UseN sweat_N ;
  Sweeping = UseN sweeping_N ;
  SwimmingPool = AdjCN (PositA (VerbToGerundA swim_V2)) (UseN pool_N) ;
  SwitchDevice = ApposCN (UseN switch_N) (MassNP (UseN device_N)) ;
  Sword = UseN sword_N ;
  Syllable = UseN syllable_N ;
  Table = UseN table_N ;
  Tableware = UseN tableware_N ;
  Tail = UseN tail_N ;
  TakingIll = AdjCN (PositA taking_A) (UseN ill_N) ;
  TakingOff = AdvCN (UseN2 (VerbToNounV2 betake_V2)) off_Adv ;
  Tape = UseN tape_N ;
  Tavern = UseN tavern_N ;
  TaxReturn = ApposCN (UseN tax_N) (MassNP (UseN return_N)) ;
  Taxicab = UseN taxicab_N ;
  Taxonomy = UseN taxonomy_N ;
  Tea = UseN tea_N ;
  TeamSport = ApposCN (UseN team_N) (MassNP (UseN sport_N)) ;
  TearSubstance = ApposCN (UseN tear_N) (MassNP (UseN substance_N)) ;
  Teenager = UseN teenager_N ;
  Telegraph = UseN telegraph_N ;
  Telephone = UseN telephone_N ;
  TelephoneLine = ApposCN (UseN telephone_N) (MassNP (UseN line_N)) ;
  Telephoning = UseN2 (VerbToNounV2 telephone_V2) ;
  TelevisionBroadcasting = ApposCN (UseN television_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 broadcast_V2))) ;
  TelevisionReceiver = ApposCN (UseN television_N) (MassNP (UseN receiver_N)) ;
  TellingALie = ApposCN (UseN2 (VerbToNounV2 foretell_V2)) (DetCN (DetQuant IndefArt NumSg) (UseN lie_N)) ;
  Tendon = UseN tendon_N ;
  Tent = UseN tent_N ;
  TerroristOrganization = ApposCN (UseN terrorist_N) (MassNP (UseN organization_N)) ;
  TestForm = ApposCN (UseN test_N) (MassNP (UseN form_N)) ;
  Testament = UseN testament_N ;
  Testifying = UseN2 (VerbToNounV2 testify_V2) ;
  Thanking = UseN2 (VerbToNounV2 thank_V2) ;
  Thermometer = UseN thermometer_N ;
  Threatening = UseN2 (VerbToNounV2 threaten_V2) ;
  Throat = UseN throat_N ;
  Throwing = UseN2 (VerbToNounV2 throw_V2) ;
  Thumb = UseN thumb_N ;
  Thunder = UseN thunder_N ;
  ThyroidGland = ApposCN (UseN thyroid_N) (MassNP (UseN gland_N)) ;
  ThyroidHormone = ApposCN (UseN thyroid_N) (MassNP (UseN hormone_N)) ;
  Ticket = UseN ticket_N ;
  TieClothing = ApposCN (UseN tie_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 clothe_V2))) ;
  Tilling = UseN2 (VerbToNounV2 till_V2) ;
  Toad = UseN toad_N ;
  Tobacco = UseN tobacco_N ;
  Toe = UseN toe_N ;
  Toilet = UseN toilet_N ;
  Tomb = UseN tomb_N ;
  TonalLanguage = AdjCN (PositA tonal_A) (UseN language_N) ;
  Tongue = UseN tongue_N ;
  Tooth = UseN tooth_N ;
  Toothbrush = UseN toothbrush_N ;
  Torso = UseN torso_N ;
  TouristSite = ApposCN (UseN tourist_N) (MassNP (UseN site_N)) ;
  Towel = UseN towel_N ;
  Tracing = UseN tracing_N ;
  TractorTrailer = ApposCN (UseN tractor_N) (MassNP (UseN trailer_N)) ;
  TransferringPosition = AdjCN (PositA (VerbToGerundA transfer_V2)) (UseN position_N) ;
  TransportationCompany = ApposCN (UseN transportation_N) (MassNP (UseN company_N)) ;
  TrapOrCage = ConjCN or_Conj (BaseCN (UseN trap_N) (UseN cage_N)) ;
  TravelContainer = ApposCN (UseN travel_N) (MassNP (UseN container_N)) ;
  Tray = UseN tray_N ;
  Treasurer = UseN treasurer_N ;
  TreeBranch = ApposCN (UseN tree_N) (MassNP (UseN branch_N)) ;
  Trembling = UseN (VerbToNoun tremble_V) ;
  Tremor = UseN tremor_N ;
  Trespassing = UseN (VerbToNoun trespass_V) ;
  Triangle = UseN triangle_N ;
  Trousers = UseN trouser_N ;
  Truck = UseN truck_N ;
  TruckTractor = ApposCN (UseN truck_N) (MassNP (UseN tractor_N)) ;
  TruckTrailer = ApposCN (UseN truck_N) (MassNP (UseN trailer_N)) ;
  Tube = UseN tube_N ;
  Turbine = UseN turbine_N ;
  TurningOffDevice = AdjCN (PositA (VerbToGerundA turn_V2)) (AdjCN (PositA off_A) (UseN device_N)) ;
  TurningOnDevice = AdvCN (UseN turning_N) (PrepNP on_Prep (MassNP (UseN device_N))) ;
  TwoDimensionalObject = AdjCN (PositA (compoundA (regA "two-dimensional"))) (UseN object_N) ;
  UnionOrganization = ApposCN (UseN union_N) (MassNP (UseN organization_N)) ;
  UnionSoldier = ApposCN (UseN union_N) (MassNP (UseN soldier_N)) ;
  University = UseN university_N ;
  UnskilledOccupation = AdjCN (PositA unskilled_A) (UseN occupation_N) ;
  Vacationing = UseN (VerbToNoun vacation_V) ;
  Vandalism = UseN vandalism_N ;
  VehicleAttack = ApposCN (UseN vehicle_N) (MassNP (UseN attack_N)) ;
  VehicleBrake = ApposCN (UseN vehicle_N) (MassNP (UseN brake_N)) ;
  VehicleController = ApposCN (UseN vehicle_N) (MassNP (UseN controller_N)) ;
  VehicleLight = AdvCN (UseN vehicle_N) light_Adv ;
  VehicleThrottle = ApposCN (UseN vehicle_N) (MassNP (UseN throttle_N)) ;
  VehicleTire = ApposCN (UseN vehicle_N) (MassNP (UseN tire_N)) ;
  VehicleWheel = ApposCN (UseN vehicle_N) (MassNP (UseN wheel_N)) ;
  VehicleWindow = ApposCN (UseN vehicle_N) (MassNP (UseN window_N)) ;
  Veil = UseN veil_N ;
  Vein = UseN vein_N ;
  VendingDevice = AdjCN (PositA (VerbToGerundA vend_V2)) (UseN device_N) ;
  VideoRecording = ApposCN (UseN video_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 record_V2))) ;
  Violin = UseN violin_N ;
  VocalMusic = AdjCN (PositA vocal_A) (UseN music_N) ;
  VocationalSchool = AdjCN (PositA vocational_A) (UseN school_N) ;
  VotingPoll = AdjCN (PositA (VerbToGerundA vote_V2)) (UseN poll_N) ;
  Vowel = UseN vowel_N ;
  Vulture = UseN vulture_N ;
  Wading = UseN2 (VerbToNounV2 wade_V2) ;
  WakingUp = AdvCN (UseN2 (VerbToNounV2 wake_V2)) up_Adv ;
  WalkingCane = AdjCN (PositA (VerbToGerundA walk_V2)) (UseN cane_N) ;
  Wall = UseN wall_N ;
  Wallpaper = UseN wallpaper_N ;
  Warehouse = UseN warehouse_N ;
  WashBasin = ApposCN (UseN wash_N) (MassNP (UseN basin_N)) ;
  Washing = UseN washing_N ;
  WashingDevice = AdjCN (PositA (VerbToGerundA wash_V2)) (UseN device_N) ;
  Wastebasket = UseN wastebasket_N ;
  WatchClock = ApposCN (UseN watch_N) (MassNP (UseN clock_N)) ;
  WaterTransportation = ApposCN (UseN water_N) (MassNP (UseN transportation_N)) ;
  WaterWave = ApposCN (UseN water_N) (MassNP (UseN wave_N)) ;
  Waving = UseN2 (VerbToNounV2 wave_V2) ;
  Wax = UseN wax_N ;
  WeaponOfMassDestruction = AdvCN (UseN weapon_N) (PrepNP part_Prep (MassNP (ApposCN (UseN mass_N) (MassNP (UseN destruction_N))))) ;
  Weekend = UseN weekend_N ;
  Weeping = UseN2 (VerbToNounV2 weep_V2) ;
  Welfare = UseN welfare_N ;
  WheatGrain = ApposCN (UseN wheat_N) (MassNP (UseN grain_N)) ;
  Wheel = UseN wheel_N ;
  Whip = UseN whip_N ;
  Whiskey = UseN whiskey_N ;
  WhiteBloodCell = AdjCN (PositA white_A) (ApposCN (UseN blood_N) (MassNP (UseN cell_N))) ;
  WholesaleStore = AdjCN (PositA wholesale_A) (UseN store_N) ;
  WillowTree = ApposCN (UseN willow_N) (MassNP (UseN tree_N)) ;
  WindInstrument = ApposCN (UseN wind_N) (MassNP (UseN instrument_N)) ;
  Windmill = UseN windmill_N ;
  Window = UseN window_N ;
  WindowCovering = ApposCN (UseN window_N) (DetCN (DetQuant IndefArt NumSg) (UseN2 (VerbToNounV2 cover_V2))) ;
  Windshield = UseN windshield_N ;
  Wine = UseN wine_N ;
  Wing = UseN wing_N ;
  WingDevice = ApposCN (UseN wing_N) (MassNP (UseN device_N)) ;
  Winking = UseN2 (VerbToNounV2 wink_V2) ;
  WinterSeason = ApposCN (UseN winter_N) (MassNP (UseN season_N)) ;
  Wire = UseN wire_N ;
  WireLine = ApposCN (UseN wire_N) (MassNP (UseN line_N)) ;
  WireSpring = ApposCN (UseN wire_N) (MassNP (UseN spring_N)) ;
  Wood = UseN wood_N ;
  WoodArtifact = ApposCN (UseN wood_N) (MassNP (UseN artifact_N)) ;
  Wool = UseN wool_N ;
  WorkerInsect = ApposCN (UseN worker_N) (MassNP (UseN insect_N)) ;
  Working = UseN working_N ;
  Workshop = UseN workshop_N ;
  Wrist = UseN wrist_N ;
  WritingDevice = AdjCN (PositA (VerbToGerundA rewrite_V2)) (UseN device_N) ;
  WrittenCommunication = AdjCN (PositA (VerbToParticipeA write_V)) (UseN communication_N) ;
  LegislativeOrganization = AdjCN (PositA legislative_A) (UseN organization_N) ;
  CommunicationDevice = ApposCN (UseN communication_N) (MassNP (UseN device_N)) ;
  PassengerVehicle = ApposCN (UseN passenger_N) (MassNP (UseN vehicle_N)) ;
  PowerSource = ApposCN (UseN power_N) (MassNP (UseN source_N)) ;
  MilitaryGeneral = AdjCN (PositA military_A) (UseN general_N) ;
  Cave = UseN cave_N ;
  DairyProduct = ApposCN (UseN dairy_N) (MassNP (UseN product_N)) ;
  PoliticalParty = AdjCN (PositA political_A) (UseN party_N) ;
  BodyOfWater = AdvCN (UseN body_N) (PrepNP part_Prep (MassNP (UseN water_N))) ;
  AnimalAgriculturalProduct = ApposCN (UseN animal_N) (MassNP (AdjCN (PositA agricultural_A) (UseN product_N))) ;
  AgriculturalProduct = AdjCN (PositA agricultural_A) (UseN product_N) ;
  Livestock = UseN livestock_N ;
  Tax = UseN tax_N ;
  ChargingAFee = ApposCN (UseN2 (VerbToNounV2 charge_V2)) (DetCN (DetQuant IndefArt NumSg) (UseN fee_N)) ;
  GeneralElection = AdjCN (PositA general_A) (UseN election_N) ;
  BaseballBase = ApposCN (UseN baseball_N) (MassNP (UseN base_N)) ;
  Attorney = UseN attorney_N ;
  RefinedPetroleumProduct = AdjCN (PositA (VerbToParticipeA refine_V)) (ApposCN (UseN petroleum_N) (MassNP (UseN product_N))) ;
  GroceryProduce = ApposCN (UseN grocery_N) (MassNP (UseN produce_N)) ;
  PlantAgriculturalProduct = ApposCN (UseN plant_N) (MassNP (AdjCN (PositA agricultural_A) (UseN product_N))) ;
  Rock = UseN rock_N ;
  Ship = UseN ship_N ;
  DisplacementHullWaterVehicle = ApposCN (ApposCN (ApposCN (UseN displacement_N) (MassNP (UseN hull_N))) (MassNP (UseN water_N))) (MassNP (UseN vehicle_N)) ;
  WaterVehicle = ApposCN (UseN water_N) (MassNP (UseN vehicle_N)) ;
  PoweredVehicle = AdjCN (PositA powered_A) (UseN vehicle_N) ;
  RollingStock = AdjCN (PositA (VerbToGerundA roll_V2)) (UseN stock_N) ;
  RailVehicle = ApposCN (UseN rail_N) (MassNP (UseN vehicle_N)) ;
  FinancialAccount = AdjCN (PositA financial_A) (UseN account_N) ;
  MiningProduct = AdjCN (PositA (VerbToGerundA mine_V2)) (UseN product_N) ;
  Celebrity = UseN celebrity_N ;
  TransitSystem = ApposCN (UseN transit_N) (MassNP (UseN system_N)) ;
  Pipeline = UseN pipeline_N ;
  RailTransportationSystem = ApposCN (ApposCN (UseN rail_N) (MassNP (UseN transportation_N))) (MassNP (UseN system_N)) ;
  MedicalDoctor = AdjCN (PositA medical_A) (UseN doctor_N) ;
  CargoVehicle = ApposCN (UseN cargo_N) (MassNP (UseN vehicle_N)) ;
  BotanicalTree = AdjCN (PositA botanical_A) (UseN tree_N) ;
  Stock = UseN stock_N ;
  Investment = UseN investment_N ;
  FinancialAsset = AdjCN (PositA financial_A) (UseN asset_N) ;

  -- unary functions :

  DescendantsFn ob = AdvNP (DetCN (DetQuant DefArt NumPl) (UseN descendant_N)) (PrepNP part_Prep ob) ;
  DiameterFn ob = AdvNP (DetCN (DetQuant DefArt NumSg) (UseN diameter_N)) (PrepNP part_Prep ob) ;
  FirstFn ob = AdvNP (DetCN (DetQuantOrd DefArt NumSg (OrdNumeral (num (pot2as3 (pot1as2 (pot0as1 pot01)))))) (UseN element_N)) (PrepNP part_Prep ob) ;
  LastFn ob = AdvNP (DetCN (DetQuant DefArt NumSg) (AdjCN (PositA last_A) (UseN element_N))) (PrepNP part_Prep ob) ;
  OccupationFn ob = AdvCN (UseN occupation_N) (PrepNP part_Prep ob) ;
  RadiusFn ob = AdvNP (DetCN (DetQuant DefArt NumSg) (UseN radius_N)) (PrepNP part_Prep ob) ;
  ResidentFn ob = AdvNP (DetCN (DetQuant DefArt NumSg) (UseN resident_N)) (PrepNP part_Prep ob) ;
  StartFn ob = AdvCN (UseN start_N) (PrepNP part_Prep ob) ;
  StopFn ob = AdvCN (UseN stop_N) (PrepNP part_Prep ob) ;
  CitizenryFn ob = AdvNP (DetCN (DetQuant DefArt NumPl) (UseN citizen_N)) (PrepNP part_Prep ob) ;


  -- quaternary functions :
  StreetAddressFn ob1 ob2 ob3 ob4= AdvNP (DetCN (DetQuant DefArt NumSg) (UseN inhabitant_N)) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (ApposCN (ApposCN (ApposCN (UseN address_N) ob1) ob2) ob3) ob4))) ;



  -- ternary predicates :
  areaOfResponsibility ob1 ob2 ob3 = mkPolSent (PredVP ob1 (AdvVP (AdvVP (UseComp (CompAP (PositA responsible_A))) (PrepNP for_Prep (MassNP ob2))) (PrepNP in_Prep ob3))) ;
  subordinateInOrganization ob1 ob2 ob3 = mkPolSent (PredVP ob1 (AdvVP (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN subordinate_N)))) (PrepNP part_Prep ob2)) (PrepNP in_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN organization_N) ob3))))) ;
  subordinatePosition ob1 ob2 ob3 = mkPolSent (PredVP (AdvNP (DetCN (DetQuant DefArt NumSg) (UseN holder_N)) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN position_N) ob1)))) (AdvVP (AdvVP (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN subordinate_N)))) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (UseN holder_N)))) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN position_N) ob2)))) (PrepNP in_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN organization_N) ob3))))) ;
  equipmentCount ob1 ob2 ob3 = mkPolSent (PredVP ob1 (AdvVP (AdvVP (PassV2 equip_V2) (PrepNP with_Prep (DetCN (DetQuant IndefArt NumSg) (ApposCN (AdvCN (UseN number_N) (PrepNP part_Prep (MassNP ob2))) (DetCN (DetQuant IndefArt NumPl) (UseN device_N)))))) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN type_N) ob3))))) ;
  memberTypeCount ob1 ob2 ob3 = mkPolSent (PredVP ob1 (AdvVP (ComplSlash (SlashV2a have_V2) (DetCN (DetQuant IndefArt NumSg) (ApposCN (AdvCN (UseN number_N) (PrepNP part_Prep ob2)) (DetCN (DetQuant IndefArt NumPl) (UseN member_N))))) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN type_N) ob3))))) ;
  memberAtTime ob1 ob2 ob3 = mkPolSent (PredVP ob1 (AdvVP (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN member_N)))) (PrepNP part_Prep ob2)) (PrepNP at_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN time_N) ob3))))) ;
  locatedAtTime ob1 ob2 ob3 = mkPolSent (PredVP ob1 (UseComp (CompAdv (ConjAdv and_Conj (BaseAdv (PrepNP at_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN time_N) ob2))) (PrepNP in_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN place_N) ob3)))))))) ;

  -- quaternary predicates 

  monetaryWage ob1 ob2 ob3 ob4 = mkPolSent (PredVP ob1 (AdvVP (AdvVP (AdvVP (ComplSlash (SlashV2a employ_V2) ob2) (PrepNP with_Prep (DetCN (DetQuant DefArt NumSg) (AdjCN (PositA monetary_A) (UseN wage_N))))) (PrepNP part_Prep ob3)) (PrepNP per_Prep ob4))) ;


  -- binary predicates 

  address ob1 ob2 = mkPolSent (PredVP ob2 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN address_N)))) (PrepNP part_Prep ob1))) ;
  affiliatedOrganization ob1 ob2 = mkPolSent (PredVP (DetCN (DetQuant IndefArt NumSg) (ApposCN (UseN organization_N) ob1)) (AdvVP (PassV2 affiliate_V2) (PrepNP to_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN organization_N) ob2))))) ;
  alias ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN alias_N)))) (PrepNP for_Prep ob2))) ;
  ancestorOrganization ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (ApposCN (UseN ancestor_N) (MassNP (UseN organization_N)))))) (PrepNP part_Prep ob2))) ;
  anniversary ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN anniversary_N)))) (PrepNP part_Prep ob2))) ;
  axis ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN axis_N)))) (PrepNP part_Prep ob2))) ;
  benefits ob1 ob2 = mkPolSent (PredVP ob1 (ComplSlash (SlashV2a benefit_V2) ob2)) ;
  birthdate ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN birth_N) (MassNP (UseN date_N)))))) (PrepNP part_Prep ob2))) ;
  birthplace ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN birth_N) (MassNP (UseN place_N)))))) (PrepNP part_Prep ob2))) ;
  capacity ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN capacity_N)))) (PrepNP part_Prep ob2))) ;
  cohabitant ob1 ob2 = mkPolSent (PredVP (ConjNP and_Conj (BaseNP ob1 ob2)) (ComplSlash (SlashV2a have_V2) (DetCN (DetQuant DefArt NumSg) (AdjCN (PositA same_A) (UseN home_N))))) ;
  coworker ob1 ob2 = mkPolSent (PredVP (ConjNP and_Conj (BaseNP ob1 ob2)) (AdvVP (UseV work_V) together_Adv)) ;
  deathdate ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN death_N) (MassNP (UseN date_N)))))) (PrepNP part_Prep ob2))) ;
  deathplace ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN death_N) (MassNP (UseN place_N)))))) (PrepNP part_Prep ob2))) ;
  deviceState ob1 ob2 = mkPolSent (PredVP ob1 (UseComp (CompAdv (PrepNP in_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN state_N) ob2)))))) ;
  disapproves ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseV disapprove_V) (PrepNP part_Prep (sentToNoun ob2)))) ;
  domesticPartner ob1 ob2 = mkPolSent (PredVP ob1 (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (AdjCN (PositA domestic_A) (ApposCN (UseN partner_N) ob2)))))) ;
  doubts ob1 ob2 = mkPolSent (PredVP ob1 (ComplSlash (SlashV2a doubt_V2) (sentToNoun ob2))) ;
  effectiveRange ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (AdjCN (PositA effective_A) (UseN range_N))))) (PrepNP part_Prep ob2))) ;
  electronNumber ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN electron_N) (MassNP (UseN number_N)))))) (PrepNP part_Prep ob2))) ;
  equipmentType ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (ComplSlash (SlashV2a have_V2) (DetCN (DetQuant IndefArt NumSg) (UseN component_N))) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN type_N) ob2))))) ;
  grammaticalRelation ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (ComplSlash (SlashV2a have_V2) (DetCN (DetQuant IndefArt NumSg) (AdjCN (PositA grammatical_A) (UseN relation_N)))) (PrepNP to_Prep ob2))) ;
  grandparent ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN grandparent_N)))) (PrepNP part_Prep ob2))) ;
  hasExpertise ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (ComplSlash (SlashV2a have_V2) (MassNP (UseN expertise_N))) (PrepNP in_Prep ob2))) ;
  hasOccupation ob1 ob2 = mkPolSent (PredVP (MassNP ob2) (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN occupation_N)))) (PrepNP part_Prep ob1))) ;
  hostileForces ob1 ob2 = mkPolSent (PredVP (ConjNP and_Conj (BaseNP ob1 ob2)) (UseComp (CompNP (DetCN (DetQuant IndefArt NumPl) (AdjCN (PositA hostile_A) (UseN force_N)))))) ;
  humanCapacity ob1 ob2 = mkPolSent (PredVP ob1 (ComplSlash (SlashV2a have_V2) (DetCN (DetQuant IndefArt NumSg) (ApposCN (AdvCN (UseN capacity_N) (PrepNP part_Prep ob2)) (DetCN (DetQuant IndefArt NumPl) (UseN human_N)))))) ;
  ideologicalAffiliationOfOrganization ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (AdjCN (PositA ideological_A) (UseN affiliation_N))))) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN organization_N) ob2))))) ;
  intelligenceQuotient ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (ComplSlash (SlashV2a have_V2) (DetCN (DetQuant IndefArt NumSg) (ApposCN (UseN intelligence_N) (MassNP (UseN quotient_N))))) (PrepNP part_Prep ob2))) ;
  inventory ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN inventory_N)))) (PrepNP part_Prep ob2))) ;
  landlord ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN landlord_N)))) (PrepNP part_Prep ob2))) ;
  legalGuardian ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (AdjCN (PositA legal_A) (UseN guardian_N))))) (PrepNP part_Prep ob2))) ;
  measurementReading ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumPl) (UseN2 (VerbToNounV2 lip_read_V2))))) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN measurement_N) ob2))))) ;
  medicalPatient ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (AdjCN (PositA medical_A) (UseN patient_N))))) (PrepNP part_Prep ob2))) ;
  memberCount ob1 ob2 = mkPolSent (PredVP ob1 (ComplSlash (SlashV2a have_V2) (DetCN (DetQuant IndefArt NumSg) (ApposCN (AdvCN (UseN number_N) (PrepNP part_Prep ob2)) (DetCN (DetQuant IndefArt NumPl) (UseN member_N)))))) ;
  memberType ob1 ob2 = mkPolSent (PredVP (AdvNP (DetCN (DetQuant DefArt NumPl) (UseN member_N)) (PrepNP part_Prep ob1)) (AdvVP (UseV belong_V) (PrepNP to_Prep ob2))) ;
  mutualStranger ob1 ob2 = mkPolSent (PredVP (ConjNP and_Conj (BaseNP ob1 ob2)) (UseComp (CompNP (DetCN (DetQuant IndefArt NumPl) (AdjCN (PositA mutual_A) (UseN stranger_N)))))) ;
  neighbor ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN neighbour_N)))) (PrepNP part_Prep ob2))) ;
  occupation ob1 ob2 = mkPolSent (PredVP ob2 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN occupation_N)))) (PrepNP part_Prep ob1))) ;
  older ob1 ob2 = mkPolSent (PredVP ob1 (UseComp (CompAP (ComparA old_A ob2)))) ;
  operator ob1 ob2 = mkPolSent (PredVP ob2 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN operator_N)))) (PrepNP part_Prep ob1))) ;
  parasite ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN parasite_N)))) (PrepNP part_Prep ob2))) ;
  pathInSystem ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN path_N)))) (PrepNP in_Prep ob2))) ;
  patientMedical ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN patient_N)))) (PrepNP part_Prep ob2))) ;
  potentialOfHydrogen ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN potential_N)))) (PrepNP part_Prep (MassNP (UseN hydrogen_N)))) (PrepNP part_Prep ob2))) ;
  powerPlant ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN power_N) (MassNP (UseN plant_N)))))) (PrepNP part_Prep ob2))) ;
  protonNumber ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN proton_N) (MassNP (UseN number_N)))))) (PrepNP part_Prep ob2))) ;
  religiousAffiliationOfOrganization ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (AdjCN (PositA religious_A) (UseN affiliation_N))))) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN organization_N) ob2))))) ;
  secretesSubstance ob1 ob2 = mkPolSent (PredVP (MassNP ob1) (ComplSlash (SlashV2a secrete_V2) (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN substance_N) (MassNP ob2))))) ;
  sliceOfFigure ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN slice_N)))) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN figure_N) ob2))))) ;
  speaksLanguage ob1 ob2 = mkPolSent (PredVP ob1 (ComplSlash (SlashV2a bespeak_V2) (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN language_N) ob2)))) ;
  stranger ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN stranger_N)))) (PrepNP to_Prep ob2))) ;
  tangent ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (MassNP (UseN tangent_N)))) (PrepNP to_Prep ob2))) ;
  tenant ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN tenant_N)))) (PrepNP part_Prep ob2))) ;
  transported ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (PassV2 transport_V2) (PrepNP in_Prep ob2))) ;
  yearOfFounding ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN year_N)))) (PrepNP part_Prep (DetCN (DetQuant IndefArt NumPl) (UseN2 (VerbToNounV2 found_V2))))) (PrepNP part_Prep ob2))) ;
  wavelength ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN wavelength_N)))) (PrepNP part_Prep ob2))) ;
  cityAddress ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN city_N) (MassNP (UseN address_N)))))) (PrepNP part_Prep ob2))) ;
  streetAddress ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN street_N) (MassNP (UseN address_N)))))) (PrepNP part_Prep ob2))) ;
  streetNumber ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN street_N) (MassNP (UseN number_N)))))) (PrepNP part_Prep ob2))) ;
  unitNumber ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN unit_N) (MassNP (UseN number_N)))))) (PrepNP part_Prep ob2))) ;
  detainee ob1 ob2 = mkPolSent (PredVP ob2 (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN detainee_N) ob2))))) ;
  targetInAttack ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN target_N)))) (PrepNP in_Prep (MassNP (ApposCN (UseN attack_N) ob2))))) ;
  enjoys ob1 ob2 = mkPolSent (PredVP ob1 (ComplSlash (SlashV2a enjoy_V2) ob2)) ;
  dislikes ob1 ob2 = mkPolSent (PredVP ob1 (ComplSlash (SlashV2a dislike_V2) ob2)) ;
  groupMember ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN member_N)))) (PrepNP in_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN group_N) ob2))))) ;
  titles ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN title_N)))) (PrepNP part_Prep ob2))) ;
  familyName ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN family_N) (MassNP (UseN name_N)))))) (PrepNP part_Prep ob2))) ;
  middleName ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN middle_N) (MassNP (UseN name_N)))))) (PrepNP part_Prep ob2))) ;
  givenName ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (AdjCN (PositA (VerbToParticipeA give_V)) (UseN name_N))))) (PrepNP part_Prep ob2))) ;
  localLongName ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (AdjCN (PositA local_A) (AdjCN (PositA long_A) (UseN name_N)))))) (PrepNP part_Prep ob2))) ;
  localShortName ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (AdjCN (PositA local_A) (AdjCN (PositA short_A) (UseN name_N)))))) (PrepNP part_Prep ob2))) ;
  defendant ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN defendant_N)))) (PrepNP part_Prep ob2))) ;
  registeredItem ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (ComplSlash (SlashV2a contain_V2) (DetCN (DetQuant IndefArt NumSg) (AdjCN (PositA official_A) (UseN record_N)))) (PrepNP part_Prep ob2))) ;
  student ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN student_N)))) (PrepNP part_Prep ob2))) ;
  teacher ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN teacher_N)))) (PrepNP part_Prep ob2))) ;
  onboard ob1 ob2 = mkPolSent (PredVP ob1 (UseComp (CompNP (MassNP (ApposCN (UseN inside_N) ob2))))) ;
  sideOfFigure ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN side_N)))) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN figure_N) ob2))))) ;
  contestParticipant ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN participant_N)))) (PrepNP in_Prep ob2))) ;
  subField ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (ApposCN (UseN sub_N) (MassNP (UseN field_N)))))) (PrepNP part_Prep ob2))) ;
  financialAccount ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (AdjCN (PositA financial_A) (UseN account_N))))) (PrepNP part_Prep ob2))) ;
  serviceProvider ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN provider_N)))) (PrepNP part_Prep ob2))) ;
  serviceRecipient ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN recipient_N)))) (PrepNP part_Prep ob2))) ;
  moves ob1 ob2 = mkPolSent (PredVP ob1 (ComplSlash (SlashV2a move_V2) ob2)) ;
  changesLocation ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (ComplSlash (SlashV2a change_V2) (DetCN (DetQuant DefArt NumSg) (UseN location_N))) (PrepNP part_Prep ob2))) ;
  friend ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN friend_N)))) (PrepNP part_Prep ob2))) ;
  grandfather ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN grandfather_N)))) (PrepNP part_Prep ob2))) ;
  aunt ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN aunt_N)))) (PrepNP part_Prep ob2))) ;
  cousin ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN cousin_N)))) (PrepNP part_Prep ob2))) ;
  grandmother ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN grandmother_N)))) (PrepNP part_Prep ob2))) ;
  nephew ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN nephew_N)))) (PrepNP part_Prep ob2))) ;
  niece ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN niece_N)))) (PrepNP part_Prep ob2))) ;
  uncle ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN uncle_N)))) (PrepNP part_Prep ob2))) ;
  stepfather ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN stepfather_N)))) (PrepNP part_Prep ob2))) ;
  stepmother ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN stepmother_N)))) (PrepNP part_Prep ob2))) ;
  controlled ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (PassV2 control_V2) (PrepNP by8agent_Prep ob2))) ;
  gainsControl ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (ComplSlash (SlashV2a gain_V2) (MassNP (UseN control_N))) (PrepNP part_Prep ob2))) ;
  losesControl ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (ComplSlash (SlashV2a lose_V2) (MassNP (UseN control_N))) (PrepNP part_Prep ob2))) ;
  arrested ob1 ob2 = mkPolSent (PredVP ob2 (AdvVP (PassV2 arrest_V2) (PrepNP during_Prep ob1))) ;
  conveyance ob1 ob2 = mkPolSent (PredVP ob2 (AdvVP (UseComp (CompNP (PPartNP (DetCN (DetQuant IndefArt NumSg) (UseN vehicle_N)) use_V2))) (PrepNP in_Prep ob1))) ;
  birthday ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN birthday_N)))) (PrepNP part_Prep ob2))) ;
  routeInSystem ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN route_N)))) (PrepNP in_Prep ob2))) ;
  expects ob1 ob2 = mkPolSent (PredVP ob1 (ComplSlash (SlashV2a expect_V2) (sentToNoun ob2))) ;
  financialAsset ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (AdjCN (PositA financial_A) (UseN asset_N))))) (PrepNP part_Prep ob2))) ;
  half ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN half_N)))) (PrepNP part_Prep ob2))) ;
  lacks ob1 ob2 = mkPolSent (PredVP ob1 (ComplSlash (SlashV2a lack_V2) ob2)) ;
  most ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN large_N)))) part_Adv) (PrepNP part_Prep ob2))) ;
  quarter ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN quarter_N)))) (PrepNP part_Prep ob2))) ;
  third ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN (mkN "third"))))) (PrepNP part_Prep ob2))) ;
  fears ob1 ob2 = mkPolSent (PredVP ob1 (ComplSlash (SlashV2a fear_V2) (sentToNoun ob2))) ;
  hopes ob1 ob2 = mkPolSent (PredVP ob1 (ComplVS hope_VS (getSent ob2))) ;
  plaintiff ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN plaintiff_N)))) (PrepNP part_Prep ob2))) ;
  brandName ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (ApposCN (UseN brand_N) (MassNP (UseN name_N)))))) (PrepNP part_Prep ob2))) ;
  formerName ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (AdjCN (PositA former_A) (UseN name_N))))) (PrepNP part_Prep ob2))) ;
  reactant ob1 ob2 = mkPolSent (PredVP ob2 (AdvVP (UseV participate_V) (PrepNP in_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN reaction_N) ob1))))) ;
  reagent ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN reagent_N)))) (PrepNP part_Prep ob2))) ;
  postalBoxNumber ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (AdjCN (PositA postal_A) (ApposCN (UseN box_N) (MassNP (UseN number_N))))))) (PrepNP part_Prep ob2))) ;
  postalCode ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (AdjCN (PositA postal_A) (UseN code_N))))) (PrepNP part_Prep ob2))) ;
  telephoneNumber ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN telephone_N) (MassNP (UseN number_N)))))) (PrepNP part_Prep ob2))) ;
  conjugate ob1 ob2 = mkPolSent (PredVP (ConjNP and_Conj (BaseNP ob1 ob2)) (PassV2 conjugate_V2)) ;
  sententialObject ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN object_N)))) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN sentence_N) ob2))))) ;
  sententialSubject ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN subject_N)))) (PrepNP part_Prep (DetCN (DetQuant DefArt NumSg) (ApposCN (UseN sentence_N) ob2))))) ;
  stockHolder ob1 ob2 = mkPolSent (PredVP ob1 (ComplSlash (SlashV2a possess_V2) ob2)) ;
  experimentalControl ob1 ob2 = mkPolSent (PredVP ob2 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN controller_N)))) (PrepNP in_Prep ob1))) ;
  allegiance ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (ComplSlash (SlashV2a owe_V2) (MassNP (UseN allegiance_N))) (PrepNP to_Prep ob2))) ;
  deceptiveIdentifier ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (AdjCN (PositA deceptive_A) (UseN identification_N))))) (PrepNP part_Prep ob2))) ;
  cargo ob1 ob2 = mkPolSent (PredVP ob1 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN cargo_N)))) (PrepNP part_Prep ob2))) ;
  meatOfAnimal ob1 ob2 = mkPolSent (PredVP (MassNP ob1) (UseComp (CompNP (AdvNP (MassNP (UseN meat_N)) (PrepNP part_Prep (MassNP (ApposCN (UseN animal_N) (MassNP ob2)))))))) ;
  distanceOnPath ob1 ob2 = mkPolSent (PredVP ob1 (UseComp (CompNP (AdvNP (AdvNP (DetCN (DetQuant DefArt NumSg) (UseN distance_N)) (PrepNP on_Prep (MassNP (UseN path_N)))) (PrepNP part_Prep ob1))))) ;
  loss ob1 ob2 = mkPolSent (PredVP ob2 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (UseN loss_N)))) (PrepNP part_Prep ob1))) ;
  soundFrequency ob1 ob2 = mkPolSent (PredVP ob2 (AdvVP (UseComp (CompNP (DetCN (DetQuant DefArt NumSg) (AdjCN (PositA sound_A) (UseN frequency_N))))) (PrepNP part_Prep ob1))) ;
};
